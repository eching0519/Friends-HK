{"ast":null,"code":"var _jsxFileName = \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\src\\\\app\\\\component\\\\settings\\\\uploadPicture.js\";\nimport React, { useState } from \"react\";\n\nconst querystring = require('querystring');\n\nconst UploadPicture = props => {\n  let user = props.user;\n  var modal = React.createRef();\n  var image = React.createRef();\n  console.log(modal);\n  console.log(image);\n  var reader;\n  var cropper;\n  var imageSrc = \"\";\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    class: \"image_area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    method: \"post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"upload_image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: user == null || user.picture == null ? require(\"../../../assets/images/emptyFace.png\") : props.user.picture,\n    id: \"uploaded_image\",\n    class: \"img-responsive rounded-circle\",\n    width: \"200px\",\n    height: \"200px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    class: \"overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Click to Change Profile Image\")), React.createElement(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    class: \"image\",\n    id: \"upload_image\",\n    onChange: e => {\n      var files = e.target.files;\n\n      var done = url => {\n        imageSrc = url;\n        modal.modal('show');\n      };\n\n      if (files && files.length > 0) {\n        reader = new FileReader();\n\n        reader.onload = function (event) {\n          done(reader.result);\n        };\n\n        reader.readAsDataURL(files[0]);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    class: \"modal fade\",\n    id: \"modal\",\n    tabindex: \"-1\",\n    ref: modal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"modal-dialog modal-lg\",\n    role: \"document\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"modal-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    class: \"modal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Crop Image Before Upload\"), React.createElement(\"button\", {\n    type: \"button\",\n    class: \"close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"\\xD7\"))), React.createElement(\"div\", {\n    class: \"modal-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"img-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"col-md-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imageSrc,\n    id: \"sample_image\",\n    ref: image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    class: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"preview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    class: \"modal-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    id: \"crop\",\n    class: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Crop\"), React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-secondary\",\n    \"data-dismiss\": \"modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Cancel\"))))));\n};\n\nexport default UploadPicture;","map":{"version":3,"sources":["Z:\\3100project\\Friends-HK\\frontend\\src\\app\\component\\settings\\uploadPicture.js"],"names":["React","useState","querystring","require","UploadPicture","props","user","modal","createRef","image","console","log","reader","cropper","imageSrc","picture","e","files","target","done","url","length","FileReader","onload","event","result","readAsDataURL"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nconst querystring = require('querystring');\r\n\r\nconst UploadPicture = (props) => {\r\n    let user = props.user\r\n\r\n    var modal = React.createRef();\r\n    var image = React.createRef();\r\n    console.log(modal)\r\n    console.log(image)\r\n    var reader;\r\n    var cropper;\r\n    var imageSrc=\"\";\r\n\r\n    return (\r\n        <>\r\n            <div class=\"image_area\">\r\n                <form method=\"post\">\r\n                    <label for=\"upload_image\">\r\n                        <img src={(user==null||user.picture==null)? require(\"../../../assets/images/emptyFace.png\") : props.user.picture} id=\"uploaded_image\" class=\"img-responsive rounded-circle\" width=\"200px\" height=\"200px\" />\r\n                        <div class=\"overlay\">\r\n                            <div class=\"text\">Click to Change Profile Image</div>\r\n                        </div>\r\n                        <input type=\"file\" name=\"image\" class=\"image\" id=\"upload_image\" onChange={(e) => {\r\n                            var files = e.target.files;\r\n                            var done = (url) => {\r\n                                imageSrc = url;\r\n                                modal.modal('show');\r\n                            }\r\n\r\n                            if(files && files.length > 0) {\r\n                                reader = new FileReader();\r\n                                reader.onload = function(event) {\r\n                                    done(reader.result);\r\n                                };\r\n                                reader.readAsDataURL(files[0]);\r\n                            }\r\n                        }} />\r\n                    </label>\r\n                </form>\r\n            </div>\r\n\r\n            <div class=\"modal fade\" id=\"modal\" tabindex=\"-1\" ref={modal}>\r\n\t\t\t  \t<div class=\"modal-dialog modal-lg\" role=\"document\">\r\n\t\t\t    \t<div class=\"modal-content\">\r\n\t\t\t      \t\t<div class=\"modal-header\">\r\n\t\t\t        \t\t<h5 class=\"modal-title\">Crop Image Before Upload</h5>\r\n\t\t\t        \t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n\t\t\t          \t\t\t<span aria-hidden=\"true\">×</span>\r\n\t\t\t        \t\t</button>\r\n\t\t\t      \t\t</div>\r\n\t\t\t      \t\t<div class=\"modal-body\">\r\n\t\t\t        \t\t<div class=\"img-container\">\r\n\t\t\t            \t\t<div class=\"row\">\r\n\t\t\t                \t\t<div class=\"col-md-8\">\r\n\t\t\t                    \t\t<img src={imageSrc} id=\"sample_image\" ref={image} />\r\n\t\t\t                \t\t</div>\r\n\t\t\t                \t\t<div class=\"col-md-4\">\r\n\t\t\t                    \t\t<div class=\"preview\"></div>\r\n\t\t\t                \t\t</div>\r\n\t\t\t            \t\t</div>\r\n\t\t\t        \t\t</div>\r\n\t\t\t      \t\t</div>\r\n\t\t\t      \t\t<div class=\"modal-footer\">\r\n\t\t\t      \t\t\t<button type=\"button\" id=\"crop\" class=\"btn btn-primary\">Crop</button>\r\n\t\t\t        \t\t<button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\r\n\t\t\t      \t\t</div>\r\n\t\t\t    \t</div>\r\n\t\t\t  \t</div>\r\n\t\t\t</div>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default UploadPicture;"]},"metadata":{},"sourceType":"module"}