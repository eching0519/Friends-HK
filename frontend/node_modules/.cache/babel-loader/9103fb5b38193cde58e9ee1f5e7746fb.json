{"ast":null,"code":"import _slicedToArray from \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\src\\\\app\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './App.scss';\nimport AppRoutes from './AppRoutes';\nimport AdminNavbar from './admin-pages/AdminNavbar';\nimport Navbar from './shared/Navbar';\nimport Sidebar from './shared/Sidebar';\nimport SettingsPanel from './shared/SettingsPanel';\nimport Footer from './shared/Footer';\nimport { withTranslation } from \"react-i18next\";\n\nconst App = props => {\n  const _useState = useState(props.location),\n        _useState2 = _slicedToArray(_useState, 2),\n        location = _useState2[0],\n        setLocation = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isFullPageLayout = _useState4[0],\n        setIsFullPageLayout = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isAdminPageLayout = _useState6[0],\n        setIsAdminPageLayout = _useState6[1];\n\n  useEffect(() => {\n    console.log(\"ROUTE CHANGED\");\n    const i18n = props.i18n;\n    const body = document.querySelector('body');\n\n    if (location.pathname === '/layout/RtlLayout') {\n      body.classList.add('rtl');\n      i18n.changeLanguage('ar');\n    } else {\n      body.classList.remove('rtl');\n      i18n.changeLanguage('en');\n    }\n\n    window.scrollTo(0, 0);\n    const fullPageLayoutRoutes = ['/login', '/register', '/verify', '/admin/login'];\n    fullPageLayoutRoutes.push('/user-pages/lockscreen', '/error-pages/error-404', '/error-pages/error-500', '/general-pages/landing-page');\n    const adminPageLayoutRoutes = ['/admin', '/admin/login'];\n\n    for (let i = 0; i < adminPageLayoutRoutes.length; i++) {\n      if (props.location.pathname === adminPageLayoutRoutes[i]) {\n        // Admin page\n        setIsAdminPageLayout(true);\n      } else {\n        setIsAdminPageLayout(false);\n      }\n    }\n\n    for (let i = 0; i < fullPageLayoutRoutes.length; i++) {\n      if (props.location.pathname === fullPageLayoutRoutes[i]) {\n        setIsFullPageLayout(true);\n        document.querySelector('.page-body-wrapper').classList.add('full-page-wrapper');\n        break;\n      } else {\n        setIsFullPageLayout(false);\n        document.querySelector('.page-body-wrapper').classList.remove('full-page-wrapper');\n      }\n    }\n\n    console.log(props.location.pathname);\n    console.log(isFullPageLayout);\n    console.log(isAdminPageLayout);\n  }, [location]);\n  let myUser = JSON.parse(sessionStorage.getItem('UserProfile'));\n\n  const _useState7 = useState(myUser),\n        _useState8 = _slicedToArray(_useState7, 2),\n        user = _useState8[0],\n        setUser = _useState8[1];\n\n  let navbarComponent = !isFullPageLayout ? !isAdminPageLayout ? React.createElement(Navbar, {\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }) : React.createElement(AdminNavbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }) : '';\n  let sidebarComponent = !isFullPageLayout && isAdminPageLayout ? React.createElement(Sidebar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }) : '';\n  let SettingsPanelComponent = !isFullPageLayout ? React.createElement(SettingsPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }) : ''; // let footerComponent = !isFullPageLayout ? <Footer/> : '';\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"container-scroller\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, navbarComponent, React.createElement(\"div\", {\n    className: \"container-fluid page-body-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, sidebarComponent, React.createElement(\"div\", {\n    className: \"main-panel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(AppRoutes, {\n    user: user,\n    setUser: setUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), SettingsPanelComponent)))));\n};\n\nexport default withTranslation()(withRouter(App));","map":{"version":3,"sources":["Z:\\3100project\\Friends-HK\\frontend\\src\\app\\App.js"],"names":["React","useEffect","useState","withRouter","AppRoutes","AdminNavbar","Navbar","Sidebar","SettingsPanel","Footer","withTranslation","App","props","location","setLocation","isFullPageLayout","setIsFullPageLayout","isAdminPageLayout","setIsAdminPageLayout","console","log","i18n","body","document","querySelector","pathname","classList","add","changeLanguage","remove","window","scrollTo","fullPageLayoutRoutes","push","adminPageLayoutRoutes","i","length","myUser","JSON","parse","sessionStorage","getItem","user","setUser","navbarComponent","sidebarComponent","SettingsPanelComponent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './App.scss';\r\nimport AppRoutes from './AppRoutes';\r\nimport AdminNavbar from './admin-pages/AdminNavbar';\r\nimport Navbar from './shared/Navbar';\r\nimport Sidebar from './shared/Sidebar';\r\nimport SettingsPanel from './shared/SettingsPanel';\r\nimport Footer from './shared/Footer';\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\nconst App = (props) => {\r\n  const [location, setLocation] = useState(props.location)\r\n  const [isFullPageLayout, setIsFullPageLayout] = useState(true)\r\n  const [isAdminPageLayout, setIsAdminPageLayout] = useState(false)\r\n\r\n  useEffect(() => {\r\n    console.log(\"ROUTE CHANGED\");\r\n    const { i18n } = props;\r\n    const body = document.querySelector('body');\r\n    if(location.pathname === '/layout/RtlLayout') {\r\n      body.classList.add('rtl');\r\n      i18n.changeLanguage('ar');\r\n    }\r\n    else {\r\n      body.classList.remove('rtl')\r\n      i18n.changeLanguage('en');\r\n    }\r\n    window.scrollTo(0, 0);\r\n    const fullPageLayoutRoutes = ['/login', '/register', '/verify', '/admin/login']\r\n    fullPageLayoutRoutes.push('/user-pages/lockscreen', '/error-pages/error-404', '/error-pages/error-500', '/general-pages/landing-page');\r\n    const adminPageLayoutRoutes = ['/admin', '/admin/login']\r\n\r\n    for ( let i = 0; i < adminPageLayoutRoutes.length; i++ ) {\r\n      if (props.location.pathname === adminPageLayoutRoutes[i]) {\r\n        // Admin page\r\n        setIsAdminPageLayout(true);\r\n      } else {\r\n        setIsAdminPageLayout(false);\r\n      }\r\n    }\r\n\r\n    for ( let i = 0; i < fullPageLayoutRoutes.length; i++ ) {\r\n      if (props.location.pathname === fullPageLayoutRoutes[i]) {\r\n        setIsFullPageLayout(true);\r\n        document.querySelector('.page-body-wrapper').classList.add('full-page-wrapper');\r\n        \r\n        break;\r\n      } else {\r\n        setIsFullPageLayout(false);\r\n        document.querySelector('.page-body-wrapper').classList.remove('full-page-wrapper');\r\n      }\r\n    }\r\n\r\n    console.log(props.location.pathname)\r\n    console.log(isFullPageLayout)\r\n    console.log(isAdminPageLayout)\r\n    \r\n  }, [location]);\r\n\r\n  let myUser = JSON.parse(sessionStorage.getItem('UserProfile'));\r\n  const [user, setUser] = useState(myUser)\r\n  \r\n  let navbarComponent = !isFullPageLayout ? (!isAdminPageLayout ? <Navbar user={user}/> : <AdminNavbar />) : '';\r\n  let sidebarComponent = (!isFullPageLayout && isAdminPageLayout) ? <Sidebar/> : '';\r\n  let SettingsPanelComponent = !isFullPageLayout ? <SettingsPanel/> : '';\r\n  // let footerComponent = !isFullPageLayout ? <Footer/> : '';\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-scroller\">\r\n        { navbarComponent }\r\n        <div className=\"container-fluid page-body-wrapper\">\r\n          { sidebarComponent }\r\n          <div className=\"main-panel\">\r\n            <div className=\"content-wrapper\">\r\n              <AppRoutes user={user} setUser={setUser} />\r\n              { SettingsPanelComponent }\r\n            </div>\r\n            {/* { footerComponent } */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withTranslation() (withRouter(App));\r\n"]},"metadata":{},"sourceType":"module"}