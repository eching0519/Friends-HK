{"ast":null,"code":"import _slicedToArray from \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\src\\\\app\\\\component\\\\settings\\\\profile.js\";\nimport React, { useEffect, useState } from \"react\";\nimport $ from 'jquery';\nimport { Form } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport Tags from \"../../../../node_modules/bootstrap5-tags/tags\";\nimport IonRangeSlider from 'react-ion-slider';\nimport HobbyList from \"./util/hobbyList\";\n\nconst querystring = require('querystring'); // Language\n// Basic: Gender(多元), Date of birth (星座), City & Country (Can set Undefined)\n// Introduction questions: 3 (Facts about me)\n// Hobby\n// Topic you are Interest\n// Friends preference: Gender, Age range, Language\n\n\nconst ProfileSettings = props => {\n  const _useState = useState(props.user),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isLoaded = _useState4[0],\n        setLoaded = _useState4[1]; // Check if page is loaded\n\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        ulang = _useState6[0],\n        setULang = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        uco = _useState8[0],\n        setUCO = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        ugender = _useState10[0],\n        setUGender = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        dob = _useState12[0],\n        setDOB = _useState12[1];\n\n  const _useState13 = useState([]),\n        _useState14 = _slicedToArray(_useState13, 2),\n        uhobbies = _useState14[0],\n        setUHobbies = _useState14[1];\n\n  const _useState15 = useState(''),\n        _useState16 = _slicedToArray(_useState15, 2),\n        bio = _useState16[0],\n        setBio = _useState16[1];\n\n  const _useState17 = useState([]),\n        _useState18 = _slicedToArray(_useState17, 2),\n        hashtags = _useState18[0],\n        setHashtags = _useState18[1];\n\n  const _useState19 = useState([]),\n        _useState20 = _slicedToArray(_useState19, 2),\n        plang = _useState20[0],\n        setPLang = _useState20[1];\n\n  const _useState21 = useState([]),\n        _useState22 = _slicedToArray(_useState21, 2),\n        pgender = _useState22[0],\n        setPGender = _useState22[1];\n\n  const _useState23 = useState(),\n        _useState24 = _slicedToArray(_useState23, 2),\n        ageFrom = _useState24[0],\n        setAgeFrom = _useState24[1];\n\n  const _useState25 = useState(),\n        _useState26 = _slicedToArray(_useState25, 2),\n        ageTo = _useState26[0],\n        setAgeTo = _useState26[1]; // var ageFrom, ageTo;\n\n\n  const ageArr = Array.from({\n    length: 53\n  }, (_, i) => i + 12);\n  ageArr.push('65+');\n  Tags.init(\"select[multiple]\"); // Other form setting by jquery\n\n  $('.react-datepicker-wrapper').addClass('w-100');\n  $('.form-control.dropdown').children('div').addClass('cursor-text'); // Run when form is changed\n\n  const _useState27 = useState(0),\n        _useState28 = _slicedToArray(_useState27, 2),\n        count = _useState28[0],\n        setCount = _useState28[1];\n\n  useEffect(() => {\n    setCount(count + 1);\n\n    if (!isLoaded) {\n      if (count == 1) setLoaded(true);\n      return;\n    }\n\n    console.log(\"Form has changed: \");\n    props.setFormChanged(true);\n    $(\"#submitBtn\").removeClass('disabled');\n  }, [ulang, uco, ugender, dob, uhobbies, bio, hashtags, plang, pgender, ageFrom, ageTo]);\n\n  const sendResetPwRequest = async () => {\n    props.setAlert({\n      visible: true,\n      strongMsg: 'Error!',\n      msg: \"Unexpected error. ()\"\n    });\n    console.log(uhobbies); // let url = '/user/profile/update';\n    // let res = await fetch(url, {\n    //     method: 'POST',\n    //     headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    //     body: querystring.stringify({\n    //         name: uname,\n    //         password: password,\n    //         newPassword: newPassword\n    //     })\n    // });\n    // let data\n    // try {\n    //     data = await res.json();\n    // } catch (error) {\n    //     props.setAlert({\n    //         visible: true,\n    //         strongMsg: 'Error!',\n    //         msg: `Unexpected error. (${error.message})`\n    //     })\n    //     return;\n    // }\n    // if (!data.success) {\n    //     props.setAlert({\n    //         visible: true,\n    //         strongMsg: 'Sorry!',\n    //         msg: `${data.message}`\n    //     })\n    //     return;\n    // }\n    // setUser(data.user)\n    // props.setUser(data.user)\n    // window.alert(\"Your information is updated\")\n    // resetForm()\n  };\n\n  const resetForm = () => {\n    $('#submitBtn').addClass('disabled').promise().then(\"class added\"); // setEmail(user.email)\n    // setUName(user.name)\n    // setPassword('')\n    // setNewPassword('')\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    className: \"forms-sample\",\n    onSubmit: async e => {\n      e.preventDefault();\n      sendResetPwRequest();\n      return false;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Profile\"), React.createElement(\"p\", {\n    className: \"card-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Basic Information\"), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"ulang\",\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Language\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"form-control\",\n    name: \"ulang\",\n    id: \"ulang\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"yue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Cantonese\"), React.createElement(\"option\", {\n    value: \"cmn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Mandarin\"), React.createElement(\"option\", {\n    value: \"eng\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"English\"))))), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"uco\",\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"Country of Origin\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"form-control\",\n    name: \"uco\",\n    id: \"uco\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, \"Not Declare\"), React.createElement(\"option\", {\n    value: \"CN\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"China\"), React.createElement(\"option\", {\n    value: \"HK\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Hong Kong\"), React.createElement(\"option\", {\n    value: \"IN\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"India\"), React.createElement(\"option\", {\n    value: \"ID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Indonesia\"), React.createElement(\"option\", {\n    value: \"JP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \"Japan\"), React.createElement(\"option\", {\n    value: \"KR\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"South Korea\"), React.createElement(\"option\", {\n    value: \"MY\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Malaysia\"), React.createElement(\"option\", {\n    value: \"PH\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Philippines\"), React.createElement(\"option\", {\n    value: \"TW\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Taiwan\"), React.createElement(\"option\", {\n    value: \"TH\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Thailand\"), React.createElement(\"option\", {\n    value: \"VN\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Vietnam\"), React.createElement(\"optgroup\", {\n    label: \"Others\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"NA\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"North America\"), React.createElement(\"option\", {\n    value: \"SA\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"South America\"), React.createElement(\"option\", {\n    value: \"ER\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \"Europe\"), React.createElement(\"option\", {\n    value: \"AS\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Asia\"), React.createElement(\"option\", {\n    value: \"AU\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Australia\"), React.createElement(\"option\", {\n    value: \"AF\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Africa\"))))))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"ugender\",\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Gender\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"form-control\",\n    name: \"ugender\",\n    id: \"ugender\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"M\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Male\"), React.createElement(\"option\", {\n    value: \"F\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Female\"), React.createElement(\"option\", {\n    value: \"TM\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \"Trans male\"), React.createElement(\"option\", {\n    value: \"TF\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Trans female\"), React.createElement(\"option\", {\n    value: \"NB\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, \"Non-binary\"), React.createElement(\"option\", {\n    value: \"ND\",\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Not Declare\"))))), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"udob\",\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Birth\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    id: \"udob\",\n    className: \"form-control\",\n    size: \"lg\",\n    selected: dob,\n    onChange: setDOB,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  })))))), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"card-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Tell us more about you\"), React.createElement(\"div\", {\n    className: \"form-group row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"uhobbies\",\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Hobbies\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    class: \"form-control\",\n    name: \"uhobbies[]\",\n    id: \"uhobbies\",\n    multiple: true,\n    \"data-allow-new\": \"true\",\n    \"data-allow-clear\": \"1\",\n    onChange: e => {\n      let values = Array.from(e.target.selectedOptions, option => option.value);\n      setUHobbies(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(HobbyList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"form-group row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"bio\",\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, \"Bio\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    class: \"form-control\",\n    id: \"bio\",\n    rows: \"5\",\n    value: bio,\n    onChange: e => setBio(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"hashtags\",\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, \"Hashtags\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    class: \"form-select\",\n    name: \"hashtags[]\",\n    id: \"hashtags\",\n    multiple: true,\n    \"data-allow-new\": \"true\",\n    \"data-allow-clear\": \"1\",\n    onChange: e => {\n      let values = Array.from(e.target.selectedOptions, option => option.value);\n      setHashtags(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"card-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, \"What types of people you would like to meet?\"), React.createElement(Form.Group, {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"plang\",\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, \"Language\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    class: \"form-control\",\n    name: \"plang[]\",\n    id: \"plang\",\n    multiple: true,\n    \"data-allow-clear\": \"1\",\n    \"data-suggestions-threshold\": \"0\",\n    onChange: e => {\n      let values = Array.from(e.target.selectedOptions, option => option.value);\n      setPLang(values);\n      console.log(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"yue\",\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, \"Cantonese\"), React.createElement(\"option\", {\n    value: \"cmn\",\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, \"Mandarin\"), React.createElement(\"option\", {\n    value: \"eng\",\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, \"English\")))), React.createElement(Form.Group, {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"pgender\",\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, \"Gender\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    class: \"form-control\",\n    name: \"pgender[]\",\n    id: \"pgender\",\n    multiple: true,\n    \"data-allow-clear\": \"1\",\n    \"data-suggestions-threshold\": \"0\",\n    onChange: e => {\n      let values = Array.from(e.target.selectedOptions, option => option.value);\n      setPGender(values);\n      console.log(values);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"M\",\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, \"Male\"), React.createElement(\"option\", {\n    value: \"F\",\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, \"Female\"), React.createElement(\"option\", {\n    value: \"TM\",\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292\n    },\n    __self: this\n  }, \"Trans male\"), React.createElement(\"option\", {\n    value: \"TF\",\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293\n    },\n    __self: this\n  }, \"Trans female\"), React.createElement(\"option\", {\n    value: \"NB\",\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, \"Non-binary\"), React.createElement(\"option\", {\n    value: \"ND\",\n    selected: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, \"Not Declare\")))), React.createElement(Form.Group, {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }, \"Age Range\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303\n    },\n    __self: this\n  }, React.createElement(IonRangeSlider, {\n    type: \"double\" // min=\"12\" max=\"50\" \n    ,\n    values: ageArr,\n    from: 18 - ageArr[0],\n    to: 40 - ageArr[0],\n    onChange: e => {\n      // ageFrom = $('.irs-from')[0].innerHTML;\n      // ageTo = $('.irs-to')[0].innerHTML;\n      setAgeFrom($('.irs-from')[0].innerHTML);\n      setAgeTo($('.irs-to')[0].innerHTML);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    class: \"text-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    id: \"submitBtn\",\n    className: \"btn btn-gradient-primary mr-2 disabled\",\n    onClick: e => {\n      if (e.target.classList.contains('disabled')) e.preventDefault();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }, \"Save Change\"), React.createElement(\"button\", {\n    type: \"reset\",\n    className: \"btn btn-light\",\n    onClick: e => {\n      e.preventDefault();\n      resetForm();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322\n    },\n    __self: this\n  }, \"Reset\")))));\n};\n\nexport default ProfileSettings;","map":{"version":3,"sources":["Z:\\3100project\\Friends-HK\\frontend\\src\\app\\component\\settings\\profile.js"],"names":["React","useEffect","useState","$","Form","DatePicker","Tags","IonRangeSlider","HobbyList","querystring","require","ProfileSettings","props","user","setUser","isLoaded","setLoaded","ulang","setULang","uco","setUCO","ugender","setUGender","dob","setDOB","uhobbies","setUHobbies","bio","setBio","hashtags","setHashtags","plang","setPLang","pgender","setPGender","ageFrom","setAgeFrom","ageTo","setAgeTo","ageArr","Array","from","length","_","i","push","init","addClass","children","count","setCount","console","log","setFormChanged","removeClass","sendResetPwRequest","setAlert","visible","strongMsg","msg","resetForm","promise","then","e","preventDefault","values","target","selectedOptions","option","value","innerHTML","classList","contains"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport $ from 'jquery';\r\nimport { Form } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport Tags from \"../../../../node_modules/bootstrap5-tags/tags\";\r\nimport IonRangeSlider from 'react-ion-slider'\r\n\r\nimport HobbyList from \"./util/hobbyList\";\r\n\r\nconst querystring = require('querystring');\r\n\r\n// Language\r\n// Basic: Gender(多元), Date of birth (星座), City & Country (Can set Undefined)\r\n// Introduction questions: 3 (Facts about me)\r\n// Hobby\r\n// Topic you are Interest\r\n// Friends preference: Gender, Age range, Language\r\n\r\nconst ProfileSettings = (props) => {\r\n    const [user, setUser] = useState(props.user)\r\n    const [isLoaded, setLoaded] = useState(false)   // Check if page is loaded\r\n\r\n    const [ulang, setULang] = useState('');\r\n    const [uco, setUCO] = useState('');\r\n    const [ugender, setUGender] = useState('');\r\n    const [dob, setDOB] = useState('');\r\n    const [uhobbies , setUHobbies] = useState([]);\r\n    const [bio , setBio] = useState('');\r\n    const [hashtags , setHashtags] = useState([]);\r\n    const [plang , setPLang ] = useState([]);\r\n    const [pgender , setPGender ] = useState([]);\r\n    const [ageFrom, setAgeFrom] = useState();\r\n    const [ageTo, setAgeTo] = useState();\r\n    // var ageFrom, ageTo;\r\n\r\n    const ageArr = Array.from({length: 53}, (_, i) => i + 12)\r\n    ageArr.push('65+')\r\n\r\n    Tags.init(\"select[multiple]\");\r\n    // Other form setting by jquery\r\n    $('.react-datepicker-wrapper').addClass('w-100')\r\n    $('.form-control.dropdown').children('div').addClass('cursor-text')\r\n    \r\n    // Run when form is changed\r\n    const [count, setCount] = useState(0)\r\n    useEffect(()=> {\r\n        setCount(count+1)\r\n        if (!isLoaded) {\r\n            if(count == 1)\r\n                setLoaded(true);\r\n            return\r\n        }\r\n        \r\n        console.log(\"Form has changed: \")\r\n        props.setFormChanged(true)\r\n        $(\"#submitBtn\").removeClass('disabled')\r\n    }, [ulang, uco, ugender, dob, uhobbies, bio, hashtags, plang, pgender, ageFrom, ageTo]);\r\n\r\n    const sendResetPwRequest = async () => {\r\n        props.setAlert({\r\n            visible: true,\r\n            strongMsg: 'Error!',\r\n            msg: `Unexpected error. ()`\r\n        })\r\n\r\n        console.log(uhobbies)\r\n        // let url = '/user/profile/update';\r\n\r\n        // let res = await fetch(url, {\r\n        //     method: 'POST',\r\n        //     headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n        //     body: querystring.stringify({\r\n        //         name: uname,\r\n        //         password: password,\r\n        //         newPassword: newPassword\r\n        //     })\r\n        // });\r\n\r\n        // let data\r\n        // try {\r\n        //     data = await res.json();\r\n        // } catch (error) {\r\n        //     props.setAlert({\r\n        //         visible: true,\r\n        //         strongMsg: 'Error!',\r\n        //         msg: `Unexpected error. (${error.message})`\r\n        //     })\r\n        //     return;\r\n        // }\r\n\r\n        // if (!data.success) {\r\n        //     props.setAlert({\r\n        //         visible: true,\r\n        //         strongMsg: 'Sorry!',\r\n        //         msg: `${data.message}`\r\n        //     })\r\n        //     return;\r\n        // }\r\n\r\n        // setUser(data.user)\r\n        // props.setUser(data.user)\r\n        // window.alert(\"Your information is updated\")\r\n        // resetForm()\r\n    };\r\n\r\n    const resetForm = () => {\r\n        $('#submitBtn').addClass('disabled').promise().then(\"class added\")\r\n        // setEmail(user.email)\r\n        // setUName(user.name)\r\n        // setPassword('')\r\n        // setNewPassword('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form className=\"forms-sample\" onSubmit={async (e)=>{\r\n                e.preventDefault();\r\n                sendResetPwRequest()\r\n                return false;\r\n            }}> \r\n\r\n        <div className=\"card-body\">\r\n            <h4 className=\"card-title\">Profile</h4>\r\n            <p className=\"card-description\">Basic Information</p>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                    <label for=\"ulang\" className=\"col-sm-3 col-form-label\">Language</label>\r\n                    <div className=\"col-sm-9\">\r\n                        <select className=\"form-control\" name=\"ulang\" id=\"ulang\">\r\n                            <option value=\"yue\">Cantonese</option>\r\n                            <option value=\"cmn\">Mandarin</option>\r\n                            <option value=\"eng\">English</option>\r\n                        </select>\r\n                    </div>\r\n                    </Form.Group>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                    <label for=\"uco\" className=\"col-sm-3 col-form-label\">Country of Origin</label>\r\n                    <div className=\"col-sm-9\">\r\n                        <select className=\"form-control\" name=\"uco\" id=\"uco\">\r\n                            <option>Not Declare</option>\r\n                            <option value=\"CN\">China</option>\r\n                            <option value=\"HK\">Hong Kong</option>\r\n                            <option value=\"IN\">India</option>\r\n                            <option value=\"ID\">Indonesia</option>\r\n                            <option value=\"JP\">Japan</option>\r\n                            <option value=\"KR\">South Korea</option>\r\n                            <option value=\"MY\">Malaysia</option>\r\n                            <option value=\"PH\">Philippines</option>\r\n                            <option value=\"TW\">Taiwan</option>\r\n                            <option value=\"TH\">Thailand</option>\r\n                            <option value=\"VN\">Vietnam</option>\r\n                            <optgroup label=\"Others\">\r\n                                <option value=\"NA\">North America</option>\r\n                                <option value=\"SA\">South America</option>\r\n                                <option value=\"ER\">Europe</option>\r\n                                <option value=\"AS\">Asia</option>\r\n                                <option value=\"AU\">Australia</option>\r\n                                <option value=\"AF\">Africa</option>\r\n                            </optgroup>\r\n                        </select>\r\n                    </div>\r\n                    </Form.Group>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                    <label for=\"ugender\" className=\"col-sm-3 col-form-label\">Gender</label>\r\n                    <div className=\"col-sm-9\">\r\n                        <select className=\"form-control\" name=\"ugender\" id=\"ugender\">\r\n                            <option value=\"M\">Male</option>\r\n                            <option value=\"F\">Female</option>\r\n                            <option value=\"TM\">Trans male</option>\r\n                            <option value=\"TF\">Trans female</option>\r\n                            <option value=\"NB\">Non-binary</option>\r\n                            <option value=\"ND\" selected>Not Declare</option>\r\n                        </select>\r\n                    </div>\r\n                    </Form.Group>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                    <label for=\"udob\" className=\"col-sm-3 col-form-label\">Birth</label>\r\n                    <div className=\"col-sm-9\">\r\n                    <DatePicker id=\"udob\" className=\"form-control\" size=\"lg\"\r\n                        selected={dob}\r\n                        onChange={setDOB}\r\n                    />\r\n                    </div>\r\n                    </Form.Group>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"card-body\">\r\n            <p className=\"card-description\">Tell us more about you</p>\r\n            <div className=\"form-group row\">\r\n                <label for=\"uhobbies\" className=\"col-sm-3 col-form-label\">Hobbies</label>\r\n                <div className=\"col-sm-9\">\r\n                    <select\r\n                        class=\"form-control\"\r\n                        name=\"uhobbies[]\"\r\n                        id=\"uhobbies\"\r\n                        multiple\r\n                        data-allow-new=\"true\"\r\n                        data-allow-clear=\"1\"\r\n                        onChange={(e)=>{\r\n                            let values = Array.from(e.target.selectedOptions, option => option.value);\r\n                            setUHobbies(values)\r\n                        }}>\r\n                        <HobbyList />\r\n                    </select>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n                <label for=\"bio\" className=\"col-sm-3 col-form-label\">Bio</label>\r\n                <div className=\"col-sm-9\">\r\n                    <textarea class=\"form-control\" id=\"bio\" rows=\"5\" value={bio} onChange={(e)=>setBio(e.target.value)}></textarea>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group row\">\r\n                <label for=\"hashtags\" className=\"col-sm-3 col-form-label\">Hashtags</label>\r\n                <div className=\"col-sm-9\">\r\n                    <select\r\n                        class=\"form-select\"\r\n                        name=\"hashtags[]\"\r\n                        id=\"hashtags\"\r\n                        multiple\r\n                        data-allow-new=\"true\"\r\n                        data-allow-clear=\"1\"\r\n                        onChange={(e)=>{\r\n                            let values = Array.from(e.target.selectedOptions, option => option.value);\r\n                            setHashtags(values)\r\n                        }}>\r\n                    </select>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"card-body\">\r\n            <p className=\"card-description\">What types of people you would like to meet?</p>\r\n\r\n                <Form.Group className=\"row\">\r\n                    <label for=\"plang\" className=\"col-sm-3 col-form-label\">Language</label>\r\n                    <div className=\"col-sm-9\">\r\n                        <select\r\n                            class=\"form-control\"\r\n                            name=\"plang[]\"\r\n                            id=\"plang\"\r\n                            multiple\r\n                            data-allow-clear=\"1\"\r\n                            data-suggestions-threshold=\"0\"\r\n                            onChange={(e)=>{\r\n                                let values = Array.from(e.target.selectedOptions, option => option.value);\r\n                                setPLang(values)\r\n                                console.log(values)\r\n                            }}>\r\n                            <option value=\"yue\" selected>Cantonese</option>\r\n                            <option value=\"cmn\" selected>Mandarin</option>\r\n                            <option value=\"eng\" selected>English</option>\r\n                        </select>\r\n                    </div>\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"row\">\r\n                    <label for=\"pgender\" className=\"col-sm-3 col-form-label\">Gender</label>\r\n                    <div className=\"col-sm-9\">\r\n                        <select\r\n                            class=\"form-control\"\r\n                            name=\"pgender[]\"\r\n                            id=\"pgender\"\r\n                            multiple\r\n                            data-allow-clear=\"1\"\r\n                            data-suggestions-threshold=\"0\"\r\n                            onChange={(e)=>{\r\n                                let values = Array.from(e.target.selectedOptions, option => option.value);\r\n                                setPGender(values)\r\n                                console.log(values)\r\n                            }}>\r\n                            <option value=\"M\" selected>Male</option>\r\n                            <option value=\"F\" selected>Female</option>\r\n                            <option value=\"TM\" selected>Trans male</option>\r\n                            <option value=\"TF\" selected>Trans female</option>\r\n                            <option value=\"NB\" selected>Non-binary</option>\r\n                            <option value=\"ND\" selected>Not Declare</option>\r\n                        </select>\r\n                    </div>\r\n                </Form.Group>\r\n                \r\n                \r\n                <Form.Group className=\"row\">\r\n                    <label className=\"col-sm-3 col-form-label\">Age Range</label>\r\n                    <div className=\"col-sm-9\">\r\n                        <IonRangeSlider type=\"double\" \r\n                            // min=\"12\" max=\"50\" \r\n                            values={ageArr}\r\n                            from={18-ageArr[0]} to={40-ageArr[0]}\r\n                            onChange={(e)=>{\r\n                                // ageFrom = $('.irs-from')[0].innerHTML;\r\n                                // ageTo = $('.irs-to')[0].innerHTML;\r\n                                setAgeFrom($('.irs-from')[0].innerHTML)\r\n                                setAgeTo($('.irs-to')[0].innerHTML)\r\n                            }} />\r\n                    </div>\r\n                </Form.Group>\r\n\r\n            <div class=\"text-right\">\r\n            <button type=\"submit\" id=\"submitBtn\" className=\"btn btn-gradient-primary mr-2 disabled\" onClick={(e)=>{\r\n                if (e.target.classList.contains('disabled'))\r\n                    e.preventDefault();\r\n            }}>Save Change</button>\r\n            <button type=\"reset\" className=\"btn btn-light\" onClick={(e)=>{e.preventDefault(); resetForm();}}>Reset</button>\r\n            </div>\r\n            \r\n        </div>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileSettings;"]},"metadata":{},"sourceType":"module"}