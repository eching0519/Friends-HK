{"ast":null,"code":"import _slicedToArray from \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\src\\\\app\\\\component\\\\settings\\\\uploadPicture.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\n\nconst querystring = require('querystring');\n\nconst UploadPicture = props => {\n  const _useState = useState(props.user),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState(props.user.picture),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userPic = _useState4[0],\n        setUserPic = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        image = _useState6[0],\n        setImage = _useState6[1];\n\n  const _useState7 = useState(\"#\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        cropData = _useState8[0],\n        setCropData = _useState8[1];\n\n  const _useState9 = useState(),\n        _useState10 = _slicedToArray(_useState9, 2),\n        cropper = _useState10[0],\n        setCropper = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        oriFilename = _useState12[0],\n        setOriFilename = _useState12[1];\n\n  const showModal = () => {// cropper = new Cropper(image, {\n    //     aspectRatio: 1,\n    //     viewMode: 3,\n    //     preview:'.preview'\n    // });\n  };\n\n  const changeImage = e => {\n    window.document.getElementById(\"showModalBtn\").click();\n    e.preventDefault();\n    let files;\n\n    if (e.dataTransfer) {\n      files = e.dataTransfer.files;\n    } else if (e.target) {\n      files = e.target.files;\n    }\n\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      setImage(reader.result);\n    };\n\n    reader.readAsDataURL(files[0]);\n    console.log(files[0]);\n    setOriFilename(files[0].name);\n  };\n\n  const getCropData = async () => {\n    if (typeof cropper !== undefined) {\n      setCropData(cropper.getCroppedCanvas().toDataURL());\n      console.log(cropper);\n      let canvas = cropper.getCroppedCanvas();\n      await canvas.toBlob(async function (blob) {\n        let url = URL.createObjectURL(blob);\n        setUserPic(url);\n        const formData = new FormData();\n        const imgfile = new File([blob], Date.now() + oriFilename);\n        formData.append('file', imgfile);\n        console.log(imgfile);\n        console.log(formData); // var reader = new FileReader();\n        // reader.readAsDataURL(blob);\n        // reader.onloadend = async function(){\n        //     var base64data = reader.result;\n        //     // // convert to file\n        //     // const arr = base64data.split(',');\n        //     // const binary = atob(arr[1]);\n        //     // const mine = arr[0].match(/:(.*?);/)[1];\n        //     // const array = [];\n        //     // for (let i = 0; i < binary.length; i++) {\n        //     //     array.push(binary.charCodeAt(i));\n        //     // }\n        //     // const blob = new Blob([])\n        // }\n\n        var reader = new FileReader();\n        reader.readAsDataURL(blob); // reader.readAsDataURL(imgfile)\n\n        reader.onload = async () => {\n          if (await sendImageToServer(reader.result)) {\n            let newUserInfo = JSON.parse(JSON.stringify(user));\n            newUserInfo.picture = url;\n            sessionStorage.setItem('UserProfile', JSON.stringify(newUserInfo));\n            props.setUser(newUserInfo);\n          }\n        }; // $.ajax({\n        //     url:'upload.php',\n        //     method:'POST',\n        //     data:{image:base64data},\n        //     success:function(data)\n        //     {\n        //         $modal.modal('hide');\n        //         $('#uploaded_image').attr('src', data);\n        //     }\n        // });\n\n      });\n    }\n  };\n\n  const sendImageToServer = async imgData => {\n    let url = '/user/profile/picture/update';\n    console.log(querystring.stringify({\n      file: imgData\n    }));\n    let res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: querystring.stringify({\n        file: imgData\n      }),\n      file: imgData\n    });\n    let data;\n\n    try {\n      data = await res.json();\n    } catch (error) {\n      props.setAlert({\n        visible: true,\n        strongMsg: 'Error!',\n        msg: \"Unexpected error. (\".concat(error.message, \")\")\n      });\n      console.log(error.message);\n      return false;\n    }\n\n    if (!data.success) {\n      props.setAlert({\n        visible: true,\n        strongMsg: 'Sorry!',\n        msg: \"\".concat(data.message)\n      });\n      console.log(data.message);\n      return false;\n    }\n\n    return true;\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"image_area d-flex justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"upload_image_form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"upload_image\",\n    className: \"image-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: userPic == null ? require(\"../../../assets/images/emptyFace.png\") : userPic,\n    id: \"uploaded_image\",\n    className: \"img-responsive rounded-circle\",\n    width: \"200px\",\n    height: \"200px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Change Image\"))), React.createElement(\"input\", {\n    lang: \"en\",\n    type: \"file\",\n    name: \"image\",\n    className: \"image\",\n    id: \"upload_image\",\n    onClick: e => {\n      e.target.value = '';\n      setOriFilename('');\n    },\n    onChange: changeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"modal fade modal-lg\",\n    id: \"modal\",\n    tabindex: \"-1\",\n    role: \"dialog\",\n    \"aria-labelledby\": \"modalLabel\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-dialog modal-dialog-centered\",\n    role: \"document\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"modal-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"modal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Crop Image Before Upload\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"\\xD7\"))), React.createElement(\"div\", {\n    className: \"modal-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"img-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(Cropper, {\n    style: {\n      height: 400,\n      width: 600\n    },\n    aspectRatio: 1,\n    preview: \".preview\",\n    src: image,\n    viewMode: 1,\n    guides: true,\n    minCropBoxHeight: 10,\n    responsive: true,\n    onInitialized: instance => {\n      setCropper(instance);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"preview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"modal-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    id: \"crop\",\n    className: \"btn btn-primary\",\n    \"data-dismiss\": \"modal\",\n    onClick: getCropData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"Save\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-dismiss\": \"modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Cancel\"))))), React.createElement(\"input\", {\n    id: \"showModalBtn\",\n    type: \"hidden\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#modal\",\n    onClick: () => {\n      showModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }));\n};\n\nexport default UploadPicture;","map":{"version":3,"sources":["Z:\\3100project\\Friends-HK\\frontend\\src\\app\\component\\settings\\uploadPicture.js"],"names":["React","useEffect","useState","Cropper","querystring","require","UploadPicture","props","user","setUser","picture","userPic","setUserPic","image","setImage","cropData","setCropData","cropper","setCropper","oriFilename","setOriFilename","showModal","changeImage","e","window","document","getElementById","click","preventDefault","files","dataTransfer","target","reader","FileReader","onload","result","readAsDataURL","console","log","name","getCropData","undefined","getCroppedCanvas","toDataURL","canvas","toBlob","blob","url","URL","createObjectURL","formData","FormData","imgfile","File","Date","now","append","sendImageToServer","newUserInfo","JSON","parse","stringify","sessionStorage","setItem","imgData","file","res","fetch","method","headers","body","data","json","error","setAlert","visible","strongMsg","msg","message","success","value","height","width","instance"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Cropper from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\nconst querystring = require('querystring');\r\n\r\nconst UploadPicture = (props) => {\r\n    const [user, setUser] = useState(props.user);\r\n    const [userPic, setUserPic] = useState(props.user.picture);\r\n\r\n    const [image, setImage] = useState('');\r\n    const [cropData, setCropData] = useState(\"#\");\r\n    const [cropper, setCropper] = useState();\r\n    const [oriFilename, setOriFilename] = useState('');\r\n\r\n\r\n    const showModal = () => {\r\n        // cropper = new Cropper(image, {\r\n        //     aspectRatio: 1,\r\n        //     viewMode: 3,\r\n        //     preview:'.preview'\r\n        // });\r\n    }\r\n\r\n    const changeImage = (e) => {\r\n        window.document.getElementById(\"showModalBtn\").click();\r\n        e.preventDefault();\r\n        let files;\r\n        if (e.dataTransfer) {\r\n            files = e.dataTransfer.files;\r\n        } else if (e.target) {\r\n            files = e.target.files;\r\n        }\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            setImage(reader.result);\r\n        }\r\n        reader.readAsDataURL(files[0]);\r\n        console.log(files[0])\r\n        setOriFilename(files[0].name);\r\n    }\r\n\r\n    const getCropData = async () => {\r\n        if (typeof cropper !== undefined) {\r\n            setCropData(cropper.getCroppedCanvas().toDataURL());\r\n            console.log(cropper)\r\n\r\n            let canvas = cropper.getCroppedCanvas();\r\n\r\n            await canvas.toBlob(async function(blob){\r\n                let url = URL.createObjectURL(blob);\r\n                setUserPic(url)\r\n\r\n                const formData = new FormData();\r\n                \r\n                const imgfile = new File([blob], Date.now() + oriFilename);\r\n                formData.append('file', imgfile);\r\n                console.log(imgfile)\r\n                console.log(formData)\r\n\r\n                // var reader = new FileReader();\r\n                // reader.readAsDataURL(blob);\r\n                // reader.onloadend = async function(){\r\n                //     var base64data = reader.result;\r\n\r\n                //     // // convert to file\r\n                //     // const arr = base64data.split(',');\r\n                //     // const binary = atob(arr[1]);\r\n                //     // const mine = arr[0].match(/:(.*?);/)[1];\r\n                //     // const array = [];\r\n                //     // for (let i = 0; i < binary.length; i++) {\r\n                //     //     array.push(binary.charCodeAt(i));\r\n                //     // }\r\n                //     // const blob = new Blob([])\r\n                // }\r\n\r\n                var reader = new FileReader();\r\n                reader.readAsDataURL(blob);\r\n                // reader.readAsDataURL(imgfile)\r\n                reader.onload = async () => {\r\n                    if (await sendImageToServer(reader.result)) {\r\n                        let newUserInfo = JSON.parse(JSON.stringify(user))\r\n                        newUserInfo.picture = url\r\n                        sessionStorage.setItem('UserProfile', JSON.stringify(newUserInfo));\r\n                        props.setUser(newUserInfo);\r\n                    }\r\n                }\r\n                \r\n\r\n                    // $.ajax({\r\n                    //     url:'upload.php',\r\n                    //     method:'POST',\r\n                    //     data:{image:base64data},\r\n                    //     success:function(data)\r\n                    //     {\r\n                    //         $modal.modal('hide');\r\n                    //         $('#uploaded_image').attr('src', data);\r\n                    //     }\r\n                    // });\r\n            });\r\n        }\r\n    }\r\n\r\n    const sendImageToServer = async (imgData) => {\r\n        let url = '/user/profile/picture/update';\r\n\r\n        console.log(querystring.stringify({\r\n            file: imgData\r\n        }))\r\n\r\n        let res = await fetch(url, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            body: querystring.stringify({\r\n                file: imgData\r\n            }),\r\n            file: imgData\r\n        });\r\n\r\n        let data;\r\n        try {\r\n            data = await res.json();\r\n        } catch (error) {\r\n            props.setAlert({\r\n                visible: true,\r\n                strongMsg: 'Error!',\r\n                msg: `Unexpected error. (${error.message})`\r\n            })\r\n            console.log(error.message)\r\n            return false;\r\n        }\r\n\r\n        if (!data.success) {\r\n            props.setAlert({\r\n                visible: true,\r\n                strongMsg: 'Sorry!',\r\n                msg: `${data.message}`\r\n            })\r\n            console.log(data.message)\r\n            return false;\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"image_area d-flex justify-content-center\">\r\n                <div className=\"upload_image_form\">\r\n                    <label for=\"upload_image\" className=\"image-wrapper\">\r\n                        <img src={(userPic==null)? require(\"../../../assets/images/emptyFace.png\") : userPic} id=\"uploaded_image\" className=\"img-responsive rounded-circle\" width=\"200px\" height=\"200px\" />\r\n                        <div className=\"overlay\">\r\n                            <div className=\"text\">Change Image</div>\r\n                        </div>\r\n                    </label>\r\n                    <input lang=\"en\" type=\"file\" name=\"image\" className=\"image\" id=\"upload_image\" onClick={(e)=>{e.target.value=''; setOriFilename('')}} onChange={changeImage} />\r\n                </div>\r\n            </div>\r\n            \r\n\r\n            <div className=\"modal fade modal-lg\" id=\"modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modalLabel\" aria-hidden=\"true\">\r\n\t\t\t  \t<div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n\t\t\t    \t<div className=\"modal-content\">\r\n\t\t\t      \t\t<div className=\"modal-header\">\r\n\t\t\t        \t\t<h5 className=\"modal-title\">Crop Image Before Upload</h5>\r\n\t\t\t        \t\t<button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n\t\t\t          \t\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t\t\t        \t\t</button>\r\n\t\t\t      \t\t</div>\r\n\t\t\t      \t\t<div className=\"modal-body\">\r\n\t\t\t        \t\t<div className=\"img-container\">\r\n\t\t\t            \t\t<div className=\"row\">\r\n\t\t\t                \t\t<div className=\"col-md-8\">\r\n                                        <Cropper style={{height: 400, width:600}} aspectRatio={1} preview=\".preview\" src={image} viewMode={1} guides={true} minCropBoxHeight={10} responsive={true} onInitialized={(instance) => {setCropper(instance)}} />\r\n\t\t\t                \t\t</div>\r\n\t\t\t                \t\t<div className=\"col-md-4\">\r\n\t\t\t                    \t\t<div className=\"preview\"></div>\r\n\t\t\t                \t\t</div>\r\n\t\t\t            \t\t</div>\r\n\t\t\t        \t\t</div>\r\n\t\t\t      \t\t</div>\r\n\t\t\t      \t\t<div className=\"modal-footer\">\r\n\t\t\t      \t\t\t<button type=\"button\" id=\"crop\" className=\"btn btn-primary\" data-dismiss=\"modal\" onClick={getCropData}>Save</button>\r\n\t\t\t        \t\t<button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\r\n\t\t\t      \t\t</div>\r\n\t\t\t    \t</div>\r\n\t\t\t  \t</div>\r\n\t\t\t</div>\r\n            <input id=\"showModalBtn\" type=\"hidden\" data-toggle=\"modal\" data-target=\"#modal\" onClick={()=>{showModal()}} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UploadPicture;"]},"metadata":{},"sourceType":"module"}