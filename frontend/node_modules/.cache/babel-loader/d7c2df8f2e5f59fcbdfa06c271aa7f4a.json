{"ast":null,"code":"import _slicedToArray from \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\src\\\\app\\\\user-pages\\\\Login.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, Link } from \"react-router-dom\";\nimport LoginVerifier from '../component/common/LoginVerifier';\nimport LoginBox from \"../component/login/LoginBox\";\nimport LoginByPassword from \"../component/login/LoginByPassword\";\nimport LoginVerify from \"../component/login/LoginVerify\";\nimport AlertMessage from '../component/common/AlertMessage';\nimport ForgotPassword from '../component/login/ForgotPassword';\nimport ResetPasswordSuccess from '../component/login/ResetPasswordSuccess';\n\nconst querystring = require('querystring');\n\nconst Login = props => {\n  // get alert message\n  let urlData = window.location.search;\n  let queryData = new URLSearchParams(urlData);\n  let msg = queryData.get('msg');\n\n  const _useState = useState('login'),\n        _useState2 = _slicedToArray(_useState, 2),\n        loginState = _useState2[0],\n        setloginState = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userName = _useState4[0],\n        setUserName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        userPassword = _useState6[0],\n        setUserPassword = _useState6[1];\n\n  const _useState7 = useState(msg === '' ? null : {\n    visible: true,\n    strongMsg: 'Sorry!',\n    msg: msg\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        alert = _useState8[0],\n        setAlert = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        user = _useState10[0],\n        setUser = _useState10[1];\n\n  const loginSuccess = () => {\n    console.log(\"UserProfile:\" + JSON.stringify(user));\n    window.location.pathname = \"/home\";\n  };\n\n  const sendVerifyEmail = async () => {\n    let url = '/user/login/email';\n    let res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: querystring.stringify({\n        email: userName\n      })\n    });\n    let data;\n\n    try {\n      data = await res.json();\n    } catch (error) {\n      setAlert({\n        visible: true,\n        strongMsg: 'Error!',\n        msg: \"Unexpected error. (\".concat(error.message, \")\")\n      });\n      return;\n    }\n\n    console.log(data);\n\n    if (!data.success) {\n      setAlert({\n        visible: true,\n        strongMsg: 'Sorry!',\n        msg: data.message\n      });\n    } else {\n      console.log(\"Email sent\");\n    }\n  };\n\n  const alreadyLoggedin = async () => {\n    // Check session\n    let url = '/checkSession';\n    let res = await fetch(url, {\n      method: 'GET'\n    });\n    let data;\n\n    try {\n      data = await res.json();\n    } catch (error) {\n      setAlert({\n        visible: true,\n        strongMsg: 'Error!',\n        msg: \"Unexpected error. (\".concat(error.message, \")\")\n      });\n      return false;\n    }\n\n    const loginVerification = data.verification;\n\n    if (loginVerification) {\n      if (loginVerification.email === userName && loginVerification.verified) {\n        // setUser(loginVerification)\n        sessionStorage.setItem('UserProfile', JSON.stringify(loginVerification));\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  let loginplaceholder = 0;\n\n  if (loginState === 'login') {\n    loginplaceholder = React.createElement(LoginBox, {\n      setUserName: setUserName,\n      setloginState: setloginState,\n      setAlert: setAlert,\n      setUser: setUser,\n      alreadyLoggedin: alreadyLoggedin,\n      loginSuccess: loginSuccess,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    });\n  }\n\n  if (loginState === 'password') {\n    console.log(userName);\n    loginplaceholder = React.createElement(LoginByPassword, {\n      userName: userName,\n      userPassword: userPassword,\n      setUserPassword: setUserPassword,\n      setloginState: setloginState,\n      sendVerifyEmail: sendVerifyEmail,\n      setAlert: setAlert,\n      setUser: setUser,\n      alreadyLoggedin: alreadyLoggedin,\n      loginSuccess: loginSuccess,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    });\n  }\n\n  if (loginState === 'verify') {\n    loginplaceholder = React.createElement(LoginVerify, {\n      userName: userName,\n      setloginState: setloginState,\n      sendVerifyEmail: sendVerifyEmail,\n      setAlert: setAlert,\n      setUser: setUser,\n      alreadyLoggedin: alreadyLoggedin,\n      loginSuccess: loginSuccess,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    });\n  }\n\n  if (loginState === 'forgot') {\n    loginplaceholder = React.createElement(ForgotPassword, {\n      userName: userName,\n      setloginState: setloginState,\n      sendVerifyEmail: sendVerifyEmail,\n      setAlert: setAlert,\n      alreadyLoggedin: alreadyLoggedin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    });\n  }\n\n  if (loginState === 'resetPwAlready') {\n    loginplaceholder = React.createElement(ResetPasswordSuccess, {\n      setloginState: setloginState,\n      setAlert: setAlert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(LoginVerifier, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"d-flex align-items-center auth p-5 make-friends-background\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row w-100 mx-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-7 grid-margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"pt-5 pl-5 pr-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Welcome!\"), React.createElement(\"div\", {\n    className: \"brand-logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: require(\"../../assets/images/logo.svg\"),\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Let's meet friends in Frends-HK!\"))), React.createElement(\"div\", {\n    className: \"col-md-5 grid-margin stretch-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, alert.visible === true && React.createElement(AlertMessage, {\n    alert: alert,\n    setAlert: setAlert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, loginplaceholder, React.createElement(\"div\", {\n    className: \"text-center mt-4 font-weight-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, \"Don't have an account? \", React.createElement(\"a\", {\n    href: \"/register\",\n    type: \"button\",\n    className: \"btn btn-link text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Create\")))))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["Z:\\3100project\\Friends-HK\\frontend\\src\\app\\user-pages\\Login.js"],"names":["React","useEffect","useState","useHistory","Link","LoginVerifier","LoginBox","LoginByPassword","LoginVerify","AlertMessage","ForgotPassword","ResetPasswordSuccess","querystring","require","Login","props","urlData","window","location","search","queryData","URLSearchParams","msg","get","loginState","setloginState","userName","setUserName","userPassword","setUserPassword","visible","strongMsg","alert","setAlert","user","setUser","loginSuccess","console","log","JSON","stringify","pathname","sendVerifyEmail","url","res","fetch","method","headers","body","email","data","json","error","message","success","alreadyLoggedin","loginVerification","verification","verified","sessionStorage","setItem","loginplaceholder"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport LoginVerifier from '../component/common/LoginVerifier'\r\nimport LoginBox from \"../component/login/LoginBox\";\r\nimport LoginByPassword from \"../component/login/LoginByPassword\";\r\nimport LoginVerify from \"../component/login/LoginVerify\";\r\nimport AlertMessage from '../component/common/AlertMessage';\r\nimport ForgotPassword from '../component/login/ForgotPassword';\r\nimport ResetPasswordSuccess from '../component/login/ResetPasswordSuccess';\r\nconst querystring = require('querystring');\r\n\r\nconst Login = (props) => {\r\n  // get alert message\r\n  let urlData = window.location.search;\r\n  let queryData = new URLSearchParams(urlData);\r\n  let msg = queryData.get('msg');\r\n\r\n    const [loginState, setloginState] = useState('login');\r\n    const [userName, setUserName] = useState('');\r\n    const [userPassword, setUserPassword] = useState('');\r\n\r\n    const [alert, setAlert] = useState(msg===''?null:{ visible: true, strongMsg: 'Sorry!',msg: msg});\r\n    const [user, setUser] = useState(null);\r\n\r\n    const loginSuccess = () => {\r\n      console.log(\"UserProfile:\"+JSON.stringify(user))\r\n      window.location.pathname = \"/home\";\r\n    };\r\n\r\n    const sendVerifyEmail = async () => {\r\n      let url = '/user/login/email';\r\n      let res = await fetch(url, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n          body: querystring.stringify({\r\n            email: userName\r\n          })\r\n      });\r\n\r\n      let data;\r\n      try {\r\n        data = await res.json();\r\n      } catch (error) {\r\n        setAlert({\r\n          visible: true,\r\n          strongMsg: 'Error!',\r\n          msg: `Unexpected error. (${error.message})`\r\n        })\r\n        return;\r\n      }\r\n      \r\n      console.log(data)\r\n\r\n      if (!data.success) {\r\n        setAlert({\r\n          visible: true,\r\n          strongMsg: 'Sorry!',\r\n          msg: data.message\r\n        })\r\n      } else {\r\n        console.log(\"Email sent\")\r\n      }\r\n    }\r\n\r\n    const alreadyLoggedin = async () => {\r\n      // Check session\r\n      let url = '/checkSession';\r\n      let res = await fetch(url, {\r\n          method: 'GET',\r\n      });\r\n\r\n      let data;\r\n      try {\r\n          data = await res.json();\r\n      } catch (error) {\r\n          setAlert({\r\n              visible: true,\r\n              strongMsg: 'Error!',\r\n              msg: `Unexpected error. (${error.message})`\r\n          })\r\n          return false\r\n      }\r\n\r\n      const loginVerification = data.verification;\r\n      if (loginVerification) {\r\n          if (loginVerification.email === userName && loginVerification.verified) {\r\n              // setUser(loginVerification)\r\n              sessionStorage.setItem('UserProfile', JSON.stringify(loginVerification));\r\n              return true\r\n          }\r\n      }\r\n\r\n      return false\r\n    }\r\n\r\n    let loginplaceholder = 0;\r\n    if (loginState === 'login') {\r\n        loginplaceholder = <LoginBox setUserName={setUserName} setloginState={setloginState} setAlert={setAlert} setUser={setUser} alreadyLoggedin={alreadyLoggedin} loginSuccess={loginSuccess} />;\r\n    }\r\n\r\n    if (loginState === 'password') {\r\n      console.log(userName)\r\n      loginplaceholder = <LoginByPassword userName={userName} userPassword={userPassword} setUserPassword={setUserPassword} setloginState={setloginState} sendVerifyEmail={sendVerifyEmail} setAlert={setAlert} setUser={setUser} alreadyLoggedin={alreadyLoggedin} loginSuccess={loginSuccess} />;\r\n    }\r\n\r\n    if (loginState === 'verify') {\r\n        loginplaceholder = <LoginVerify userName={userName} setloginState={setloginState} sendVerifyEmail={sendVerifyEmail} setAlert={setAlert}setUser={setUser}  alreadyLoggedin={alreadyLoggedin} loginSuccess={loginSuccess} />;\r\n    }\r\n\r\n    if (loginState === 'forgot') {\r\n      loginplaceholder = <ForgotPassword userName={userName} setloginState={setloginState} sendVerifyEmail={sendVerifyEmail} setAlert={setAlert} alreadyLoggedin={alreadyLoggedin} />;\r\n    }\r\n\r\n    if (loginState === 'resetPwAlready') {\r\n      loginplaceholder = <ResetPasswordSuccess setloginState={setloginState} setAlert={setAlert} />;\r\n    }\r\n\r\n    return (\r\n      <>\r\n      <LoginVerifier />\r\n        <div className='d-flex align-items-center auth p-5 make-friends-background'>\r\n          <div className=\"row w-100 mx-0\">\r\n            <div className=\"col-md-7 grid-margin\">\r\n              <div className=\"pt-5 pl-5 pr-5\">\r\n                <h1>Welcome!</h1>\r\n                <div className=\"brand-logo\">\r\n                  <img src={require(\"../../assets/images/logo.svg\")} alt=\"logo\" />\r\n                </div>\r\n                <div>Let's meet friends in Frends-HK!</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-5 grid-margin stretch-card\">\r\n              <div>\r\n              {alert.visible === true && <AlertMessage alert={alert} setAlert={setAlert} />}\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  {loginplaceholder}\r\n                  <div className=\"text-center mt-4 font-weight-light\">\r\n                    Don't have an account? <a href='/register' type=\"button\" className=\"btn btn-link text-primary\">Create</a>\r\n                </div>\r\n                </div>\r\n              </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}