{"ast":null,"code":"var _jsxFileName = \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\src\\\\app\\\\component\\\\settings\\\\account.js\";\nimport React, { useState } from \"react\";\nimport UploadPicture from \"./uploadPicture\";\n\nconst querystring = require('querystring');\n\nconst AccountSettings = props => {\n  let user = props.user;\n\n  const sendResetPwRequest = async () => {\n    let url = '/user/forgotPassword/reset';\n    let res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: querystring.stringify({\n        email: 'email',\n        code: 'verifyCode',\n        password: 'password'\n      })\n    });\n    let data;\n\n    try {\n      data = await res.json();\n    } catch (error) {\n      props.setAlert({\n        visible: true,\n        strongMsg: 'Error!',\n        msg: \"Unexpected error. (\".concat(error.message, \")\")\n      });\n      return;\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h4\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Account\"), React.createElement(UploadPicture, {\n    user: user,\n    setUser: props.setUser,\n    setAlert: props.setAlert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    className: \"forms-sample\",\n    onSubmit: e => {\n      e.preventDefault();\n      props.setAlert({\n        visible: true\n      }); // return false;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"emailInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Email Address\"), React.createElement(\"input\", {\n    placeholder: \"Email Address\",\n    type: \"email\",\n    id: \"emailInput\",\n    className: \"form-control form-control-lg\",\n    readOnly: true,\n    value: user == null ? '' : user.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"nameInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Display Name\"), React.createElement(\"input\", {\n    placeholder: \"Display Name\",\n    type: \"text\",\n    id: \"nameInput\",\n    className: \"form-control form-control\",\n    value: user == null ? '' : user.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"passwordInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    placeholder: \"Email\",\n    type: \"password\",\n    id: \"passwordInput\",\n    className: \"form-control form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"newPasswordInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"New Password\"), React.createElement(\"input\", {\n    placeholder: \"Password\",\n    type: \"password\",\n    id: \"newPasswordInput\",\n    className: \"form-control form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"form-check-label text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    className: \"input-helper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), \"Remember me\")), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-gradient-primary mr-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(\"button\", {\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Cancel\")));\n};\n\nexport default AccountSettings;","map":{"version":3,"sources":["Z:\\3100project\\Friends-HK\\frontend\\src\\app\\component\\settings\\account.js"],"names":["React","useState","UploadPicture","querystring","require","AccountSettings","props","user","sendResetPwRequest","url","res","fetch","method","headers","body","stringify","email","code","password","data","json","error","setAlert","visible","strongMsg","msg","message","setUser","e","preventDefault","name"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport UploadPicture from \"./uploadPicture\";\r\nconst querystring = require('querystring');\r\n\r\nconst AccountSettings = (props) => {\r\n\r\n    let user = props.user\r\n\r\n    const sendResetPwRequest = async () => {\r\n        let url = '/user/forgotPassword/reset';\r\n\r\n        let res = await fetch(url, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            body: querystring.stringify({\r\n                email: 'email',\r\n                code: 'verifyCode',\r\n                password: 'password'\r\n            })\r\n        });\r\n\r\n        let data\r\n        try {\r\n            data = await res.json();\r\n        } catch (error) {\r\n            props.setAlert({\r\n                visible: true,\r\n                strongMsg: 'Error!',\r\n                msg: `Unexpected error. (${error.message})`\r\n            })\r\n            return;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h4 className=\"card-title\">Account</h4>\r\n\r\n            <UploadPicture user={user} setUser={props.setUser} setAlert={props.setAlert} />\r\n\r\n            <form className=\"forms-sample\" onSubmit={(e)=>{\r\n                e.preventDefault();\r\n                props.setAlert({visible:true});\r\n                // return false;\r\n            }}> \r\n\r\n                <div className=\"form-group\">\r\n                    <label for=\"emailInput\">Email Address</label>\r\n                    <input placeholder=\"Email Address\" type=\"email\" id=\"emailInput\" className=\"form-control form-control-lg\" readOnly value={user==null?'':user.email} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"nameInput\">Display Name</label>\r\n                    <input placeholder=\"Display Name\" type=\"text\" id=\"nameInput\" className=\"form-control form-control\" value={user==null?'':user.name} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"passwordInput\">Password</label>\r\n                    <input placeholder=\"Email\" type=\"password\" id=\"passwordInput\" className=\"form-control form-control\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"newPasswordInput\">New Password</label>\r\n                    <input placeholder=\"Password\" type=\"password\" id=\"newPasswordInput\" className=\"form-control form-control\" />\r\n                </div>\r\n                <div className=\"form-check\">\r\n                    <label className=\"form-check-label text-muted\">\r\n                        <input type=\"checkbox\" className=\"form-check-input\" />\r\n                        <i className=\"input-helper\"></i>Remember me\r\n                    </label>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-gradient-primary mr-2\">Submit</button>\r\n                <button className=\"btn btn-light\">Cancel</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AccountSettings;"]},"metadata":{},"sourceType":"module"}