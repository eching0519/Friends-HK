{"ast":null,"code":"import _slicedToArray from \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\src\\\\app\\\\user-pages\\\\Login.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, Link } from \"react-router-dom\";\nimport LoginBox from \"../component/login/LoginBox\";\nimport LoginByPassword from \"../component/login/LoginByPassword\";\nimport LoginVerify from \"../component/login/LoginVerify\";\nimport AlertMessage from '../component/common/AlertMessage';\nimport ForgotPassword from '../component/login/ForgotPassword';\nimport ResetPasswordSuccess from '../component/login/ResetPasswordSuccess';\n\nconst querystring = require('querystring');\n\nconst Login = () => {\n  const _useState = useState('login'),\n        _useState2 = _slicedToArray(_useState, 2),\n        loginState = _useState2[0],\n        setloginState = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userName = _useState4[0],\n        setUserName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        userPassword = _useState6[0],\n        setUserPassword = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        alert = _useState8[0],\n        setAlert = _useState8[1];\n\n  let navigate = useHistory();\n  useEffect(() => {\n    console.log(\"changed to \".concat(loginState));\n\n    if (loginState === 'success') {\n      navigate(\"/home\");\n    }\n  }, [loginState]);\n\n  const sendVerifyEmail = async () => {\n    let url = '/user/login/email';\n    let res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: querystring.stringify({\n        email: userName\n      })\n    });\n    let data;\n\n    try {\n      data = await res.json();\n    } catch (error) {\n      setAlert({\n        visible: true,\n        strongMsg: 'Error!',\n        msg: \"Unexpected error. (\".concat(error.message, \")\")\n      });\n      return;\n    }\n\n    console.log(data);\n\n    if (!data.success) {\n      setAlert({\n        visible: true,\n        strongMsg: 'Sorry!',\n        msg: data.message\n      });\n    } else {\n      console.log(\"Email sent\");\n    }\n  };\n\n  const alreadyLoggedin = async () => {\n    // Check session\n    let url = '/checkSession';\n    let res = await fetch(url, {\n      method: 'GET'\n    });\n    let data;\n\n    try {\n      data = await res.json();\n    } catch (error) {\n      setAlert({\n        visible: true,\n        strongMsg: 'Error!',\n        msg: \"Unexpected error. (\".concat(error.message, \")\")\n      });\n      return false;\n    }\n\n    const loginVerification = data.verification;\n\n    if (loginVerification) {\n      if (loginVerification.email === userName && loginVerification.verified) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  let loginplaceholder = 0;\n\n  if (loginState === 'login') {\n    loginplaceholder = React.createElement(LoginBox, {\n      setUserName: setUserName,\n      setloginState: setloginState,\n      setAlert: setAlert,\n      alreadyLoggedin: alreadyLoggedin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    });\n  }\n\n  if (loginState === 'password') {\n    console.log(userName);\n    loginplaceholder = React.createElement(LoginByPassword, {\n      userName: userName,\n      userPassword: userPassword,\n      setUserPassword: setUserPassword,\n      setloginState: setloginState,\n      sendVerifyEmail: sendVerifyEmail,\n      setAlert: setAlert,\n      alreadyLoggedin: alreadyLoggedin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    });\n  }\n\n  if (loginState === 'verify') {\n    loginplaceholder = React.createElement(LoginVerify, {\n      userName: userName,\n      setloginState: setloginState,\n      sendVerifyEmail: sendVerifyEmail,\n      setAlert: setAlert,\n      alreadyLoggedin: alreadyLoggedin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    });\n  }\n\n  if (loginState === 'forgot') {\n    loginplaceholder = React.createElement(ForgotPassword, {\n      userName: userName,\n      setloginState: setloginState,\n      sendVerifyEmail: sendVerifyEmail,\n      setAlert: setAlert,\n      alreadyLoggedin: alreadyLoggedin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    });\n  }\n\n  if (loginState === 'resetPwAlready') {\n    loginplaceholder = React.createElement(ResetPasswordSuccess, {\n      setloginState: setloginState,\n      setAlert: setAlert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"d-flex align-items-center auth p-5 make-friends-background\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row w-100 mx-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-7 grid-margin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"pt-5 pl-5 pr-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Welcome!\"), React.createElement(\"img\", {\n    src: require(\"../../assets/images/logo.svg\"),\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Let's meet friends in Frends-HK!\"))), React.createElement(\"div\", {\n    className: \"col-md-5 grid-margin stretch-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, alert.visible === true && React.createElement(AlertMessage, {\n    strongMsg: alert.strongMsg,\n    msg: alert.msg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, loginplaceholder, React.createElement(\"div\", {\n    className: \"text-center mt-4 font-weight-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"Don't have an account? \", React.createElement(\"a\", {\n    href: \"/register\",\n    type: \"button\",\n    className: \"btn btn-link text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Create\")))))))));\n};\n\nexport default Login;","map":{"version":3,"sources":["Z:\\3100project\\Friends-HK\\frontend\\src\\app\\user-pages\\Login.js"],"names":["React","useEffect","useState","useHistory","Link","LoginBox","LoginByPassword","LoginVerify","AlertMessage","ForgotPassword","ResetPasswordSuccess","querystring","require","Login","loginState","setloginState","userName","setUserName","userPassword","setUserPassword","alert","setAlert","navigate","console","log","sendVerifyEmail","url","res","fetch","method","headers","body","stringify","email","data","json","error","visible","strongMsg","msg","message","success","alreadyLoggedin","loginVerification","verification","verified","loginplaceholder"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport LoginBox from \"../component/login/LoginBox\";\r\nimport LoginByPassword from \"../component/login/LoginByPassword\";\r\nimport LoginVerify from \"../component/login/LoginVerify\";\r\nimport AlertMessage from '../component/common/AlertMessage';\r\nimport ForgotPassword from '../component/login/ForgotPassword';\r\nimport ResetPasswordSuccess from '../component/login/ResetPasswordSuccess';\r\nconst querystring = require('querystring');\r\n\r\nconst Login = () => {\r\n    const [loginState, setloginState] = useState('login');\r\n    const [userName, setUserName] = useState('');\r\n    const [userPassword, setUserPassword] = useState('');\r\n\r\n    const [alert, setAlert] = useState('');\r\n\r\n    let navigate = useHistory();\r\n\r\n    useEffect(() => {\r\n        console.log(`changed to ${loginState}`)\r\n        if (loginState === 'success') {\r\n            navigate(\"/home\");\r\n        }\r\n    }, [loginState]);\r\n\r\n    const sendVerifyEmail = async () => {\r\n      let url = '/user/login/email';\r\n      let res = await fetch(url, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n          body: querystring.stringify({\r\n            email: userName\r\n          })\r\n      });\r\n\r\n      let data;\r\n      try {\r\n        data = await res.json();\r\n      } catch (error) {\r\n        setAlert({\r\n          visible: true,\r\n          strongMsg: 'Error!',\r\n          msg: `Unexpected error. (${error.message})`\r\n        })\r\n        return;\r\n      }\r\n      \r\n      console.log(data)\r\n\r\n      if (!data.success) {\r\n        setAlert({\r\n          visible: true,\r\n          strongMsg: 'Sorry!',\r\n          msg: data.message\r\n        })\r\n      } else {\r\n        console.log(\"Email sent\")\r\n      }\r\n    }\r\n\r\n    const alreadyLoggedin = async () => {\r\n      // Check session\r\n      let url = '/checkSession';\r\n      let res = await fetch(url, {\r\n          method: 'GET',\r\n      });\r\n\r\n      let data;\r\n      try {\r\n          data = await res.json();\r\n      } catch (error) {\r\n          setAlert({\r\n              visible: true,\r\n              strongMsg: 'Error!',\r\n              msg: `Unexpected error. (${error.message})`\r\n          })\r\n          return false\r\n      }\r\n\r\n      const loginVerification = data.verification;\r\n      if (loginVerification) {\r\n          if (loginVerification.email === userName && loginVerification.verified) {\r\n              return true\r\n          }\r\n      }\r\n\r\n      return false\r\n    }\r\n\r\n    let loginplaceholder = 0;\r\n    if (loginState === 'login') {\r\n        loginplaceholder = <LoginBox setUserName={setUserName} setloginState={setloginState} setAlert={setAlert} alreadyLoggedin={alreadyLoggedin} />;\r\n    }\r\n\r\n    if (loginState === 'password') {\r\n      console.log(userName)\r\n      loginplaceholder = <LoginByPassword userName={userName} userPassword={userPassword} setUserPassword={setUserPassword} setloginState={setloginState} sendVerifyEmail={sendVerifyEmail} setAlert={setAlert} alreadyLoggedin={alreadyLoggedin} />;\r\n    }\r\n\r\n    if (loginState === 'verify') {\r\n        loginplaceholder = <LoginVerify userName={userName} setloginState={setloginState} sendVerifyEmail={sendVerifyEmail} setAlert={setAlert} alreadyLoggedin={alreadyLoggedin} />;\r\n    }\r\n\r\n    if (loginState === 'forgot') {\r\n      loginplaceholder = <ForgotPassword userName={userName} setloginState={setloginState} sendVerifyEmail={sendVerifyEmail} setAlert={setAlert} alreadyLoggedin={alreadyLoggedin} />;\r\n    }\r\n\r\n    if (loginState === 'resetPwAlready') {\r\n      loginplaceholder = <ResetPasswordSuccess setloginState={setloginState} setAlert={setAlert} />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className='d-flex align-items-center auth p-5 make-friends-background'>\r\n          <div className=\"row w-100 mx-0\">\r\n            <div className=\"col-md-7 grid-margin\">\r\n              <div className=\"pt-5 pl-5 pr-5\">\r\n                <h1>Welcome!</h1>\r\n                {/* <div className=\"brand-logo\"> */}\r\n                  <img src={require(\"../../assets/images/logo.svg\")} alt=\"logo\" />\r\n                {/* </div> */}\r\n                <div>Let's meet friends in Frends-HK!</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-5 grid-margin stretch-card\">\r\n              <div>\r\n              {alert.visible === true && <AlertMessage strongMsg={alert.strongMsg} msg={alert.msg} />}\r\n              <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                  {loginplaceholder}\r\n                  <div className=\"text-center mt-4 font-weight-light\">\r\n                    Don't have an account? <a href='/register' type=\"button\" className=\"btn btn-link text-primary\">Create</a>\r\n                </div>\r\n                </div>\r\n              </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}