{"ast":null,"code":"import _slicedToArray from \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\src\\\\app\\\\component\\\\login\\\\ForgotPassword.js\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst querystring = require('querystring');\n\nconst ForgotPassword = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        verifyCode = _useState4[0],\n        setVerifyCode = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        password = _useState6[0],\n        setPassword = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        disableInput = _useState8[0],\n        setDisableInput = _useState8[1];\n\n  const sendResetPwRequest = async () => {\n    let url = '/user/forgotPassword/reset';\n    let body = querystring.stringify({\n      email: email,\n      code: verifyCode,\n      password: password\n    });\n    let res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: body\n    });\n    let data;\n\n    try {\n      data = await res.json();\n    } catch (error) {\n      props.setAlert({\n        visible: true,\n        strongMsg: 'Error!',\n        msg: 'Please try again later. (' + error.message + ')'\n      });\n      return;\n    }\n\n    setDisableInput(false);\n\n    if (data.success) {\n      //console.log('finally!!!!')\n      props.setloginState('success');\n    } else {\n      props.setAlert({\n        visible: true,\n        strongMsg: 'Sorry!',\n        msg: data.message\n      });\n    }\n  };\n\n  return React.createElement(\"form\", {\n    className: \"pt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"emailInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Email address\"), React.createElement(\"input\", {\n    type: \"email\",\n    id: \"emailInput\",\n    placeholder: \"Email\",\n    size: \"lg\",\n    className: \"form-control form-control-lg\",\n    required: true,\n    onChange: event => {\n      setEmail(event.target.value);\n    },\n    disabled: disableInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"verifyCodeInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Verification Code\"), React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Email verification Code\",\n    type: \"text\",\n    id: \"verifyCodeInput\",\n    className: \"form-control form-control\",\n    required: true,\n    onChange: event => {\n      setVerifyCode(event.target.value);\n    },\n    disabled: disableInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-gradient-primary\",\n    type: \"button\",\n    onClick: () => props.sendVerifyEmail(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Resend\")))), React.createElement(\"div\", {\n    className: \"mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-gradient-primary mr-2 w-100 mb-2\",\n    onClick: e => {\n      sendResetPwRequest();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Reset\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light w-100\",\n    onClick: () => props.setloginState('password'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Login By Password\")));\n};\n\nexport default ForgotPassword;","map":{"version":3,"sources":["Z:\\3100project\\Friends-HK\\frontend\\src\\app\\component\\login\\ForgotPassword.js"],"names":["React","useState","Link","querystring","require","ForgotPassword","props","email","setEmail","verifyCode","setVerifyCode","password","setPassword","disableInput","setDisableInput","sendResetPwRequest","url","body","stringify","code","res","fetch","method","headers","data","json","error","setAlert","visible","strongMsg","msg","message","success","setloginState","event","target","value","sendVerifyEmail","e"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst querystring = require('querystring');\r\n\r\nconst ForgotPassword = props => {\r\n    const [email, setEmail] = useState('');\r\n    const [verifyCode, setVerifyCode] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [disableInput, setDisableInput] = useState(false);\r\n\r\n    const sendResetPwRequest = async () => {\r\n        let url = '/user/forgotPassword/reset';\r\n        let body = querystring.stringify({\r\n            email: email,\r\n            code: verifyCode,\r\n            password: password\r\n        });\r\n\r\n        let res = await fetch(url, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            body: body\r\n        });\r\n\r\n        let data\r\n        try {\r\n            data = await res.json();\r\n        } catch (error) {\r\n            props.setAlert({\r\n                visible: true,\r\n                strongMsg: 'Error!',\r\n                msg: 'Please try again later. (' + error.message + ')'\r\n            })\r\n            return;\r\n        }\r\n\r\n        setDisableInput(false);\r\n        if (data.success) {\r\n            //console.log('finally!!!!')\r\n            props.setloginState('success');\r\n        } else {\r\n            props.setAlert({\r\n                visible: true,\r\n                strongMsg: 'Sorry!',\r\n                msg: data.message\r\n              })\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <form className=\"pt-3\">\r\n            <div className=\"form-group\">\r\n                    <label for=\"emailInput\">Email address</label>\r\n                    <input type=\"email\" id=\"emailInput\" placeholder=\"Email\" size=\"lg\" className=\"form-control form-control-lg\" required onChange={(event) => {\r\n                        setEmail(event.target.value);\r\n                    }} disabled={disableInput} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label for=\"verifyCodeInput\">Verification Code</label>\r\n                <div className=\"input-group\">\r\n                    <input placeholder=\"Email verification Code\" type=\"text\" id=\"verifyCodeInput\" className=\"form-control form-control\" required onChange={(event) => {\r\n                    setVerifyCode(event.target.value);\r\n                }} disabled={disableInput} />\r\n                    <div className=\"input-group-append\"><button className=\"btn btn-sm btn-gradient-primary\" type=\"button\" onClick={()=> props.sendVerifyEmail()}\r\n                    >Resend</button></div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"mt-3\">\r\n                <button type=\"button\" className=\"btn btn-gradient-primary mr-2 w-100 mb-2\" onClick={(e) => {\r\n\r\n                    sendResetPwRequest();\r\n                }}>Reset</button>\r\n                <button type=\"button\" className=\"btn btn-light w-100\" onClick={() => props.setloginState('password')}>Login By Password</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}