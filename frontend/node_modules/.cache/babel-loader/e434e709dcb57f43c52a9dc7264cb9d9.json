{"ast":null,"code":"import _slicedToArray from \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\src\\\\app\\\\component\\\\settings\\\\account.js\";\nimport React, { useEffect, useState } from \"react\";\nimport UploadPicture from \"./uploadPicture\";\n\nconst querystring = require('querystring');\n\nconst AccountSettings = props => {\n  const _useState = useState(props.user),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState(props.user === null ? '' : props.user.email),\n        _useState4 = _slicedToArray(_useState3, 2),\n        email = _useState4[0],\n        setEmail = _useState4[1];\n\n  const _useState5 = useState(props.user === null ? '' : props.user.name),\n        _useState6 = _slicedToArray(_useState5, 2),\n        uname = _useState6[0],\n        setUName = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        password = _useState8[0],\n        setPassword = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        newPassword = _useState10[0],\n        setNewPassword = _useState10[1]; // Run when form is changed\n\n\n  useEffect(() => {\n    props.setFormChanged(true);\n    window.document.getElementById('submitBtn').disabled = false;\n  }, [email, uname, password, newPassword]);\n\n  const sendResetPwRequest = async () => {\n    let url = '/user/profile/update';\n    let res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: querystring.stringify({\n        name: uname,\n        password: password,\n        newPassword: newPassword\n      })\n    });\n    let data;\n\n    try {\n      data = await res.json();\n    } catch (error) {\n      props.setAlert({\n        visible: true,\n        strongMsg: 'Error!',\n        msg: \"Unexpected error. (\".concat(error.message, \")\")\n      });\n      return;\n    }\n\n    if (!data.success) {\n      props.setAlert({\n        visible: true,\n        strongMsg: 'Sorry!',\n        msg: \"\".concat(data.message)\n      });\n      return;\n    }\n\n    props.setUser(data.user);\n    window.alert(\"Your information is updated\");\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h4\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Account\"), React.createElement(UploadPicture, {\n    user: user,\n    setUser: props.setUser,\n    setAlert: props.setAlert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    className: \"forms-sample\",\n    onSubmit: async e => {\n      e.preventDefault();\n      sendResetPwRequest();\n      return false;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"emailInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Email Address\"), React.createElement(\"input\", {\n    placeholder: \"Email Address (Required)\",\n    type: \"email\",\n    id: \"emailInput\",\n    className: \"form-control form-control-lg\",\n    readOnly: true,\n    value: email,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"nameInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Display Name\"), React.createElement(\"input\", {\n    placeholder: \"Display Name (Required)\",\n    type: \"text\",\n    id: \"nameInput\",\n    className: \"form-control form-control\",\n    value: uname,\n    required: true,\n    onChange: e => setUName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"passwordInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    placeholder: \"Password (Required)\",\n    type: \"password\",\n    id: \"passwordInput\",\n    className: \"form-control form-control\",\n    value: password,\n    required: true,\n    onChange: e => setPassword(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"newPasswordInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"New Password\"), React.createElement(\"input\", {\n    placeholder: \"Password\",\n    type: \"password\",\n    id: \"newPasswordInput\",\n    className: \"form-control form-control\",\n    value: newPassword,\n    onChange: e => setNewPassword(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    id: \"submitBtn\",\n    className: \"btn btn-gradient-primary mr-2\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Save Change\"), React.createElement(\"button\", {\n    type: \"reset\",\n    className: \"btn btn-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Reset\")));\n};\n\nexport default AccountSettings;","map":{"version":3,"sources":["Z:\\3100project\\Friends-HK\\frontend\\src\\app\\component\\settings\\account.js"],"names":["React","useEffect","useState","UploadPicture","querystring","require","AccountSettings","props","user","setUser","email","setEmail","name","uname","setUName","password","setPassword","newPassword","setNewPassword","setFormChanged","window","document","getElementById","disabled","sendResetPwRequest","url","res","fetch","method","headers","body","stringify","data","json","error","setAlert","visible","strongMsg","msg","message","success","alert","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport UploadPicture from \"./uploadPicture\";\r\nconst querystring = require('querystring');\r\n\r\nconst AccountSettings = (props) => {\r\n    const [user, setUser] = useState(props.user)\r\n    const [email, setEmail] = useState(props.user===null?'':props.user.email)\r\n    const [uname, setUName] = useState(props.user===null?'':props.user.name)\r\n    const [password, setPassword] = useState('')\r\n    const [newPassword, setNewPassword] = useState('')\r\n\r\n    // Run when form is changed\r\n    useEffect(()=> {\r\n        props.setFormChanged(true)\r\n        window.document.getElementById('submitBtn').disabled = false;\r\n        \r\n    }, [email, uname, password, newPassword]);\r\n\r\n    const sendResetPwRequest = async () => {\r\n        let url = '/user/profile/update';\r\n\r\n        let res = await fetch(url, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            body: querystring.stringify({\r\n                name: uname,\r\n                password: password,\r\n                newPassword: newPassword\r\n            })\r\n        });\r\n\r\n        let data\r\n        try {\r\n            data = await res.json();\r\n        } catch (error) {\r\n            props.setAlert({\r\n                visible: true,\r\n                strongMsg: 'Error!',\r\n                msg: `Unexpected error. (${error.message})`\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (!data.success) {\r\n            props.setAlert({\r\n                visible: true,\r\n                strongMsg: 'Sorry!',\r\n                msg: `${data.message}`\r\n            })\r\n            return;\r\n        }\r\n\r\n        props.setUser(data.user)\r\n        window.alert(\"Your information is updated\")\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h4 className=\"card-title\">Account</h4>\r\n\r\n            <UploadPicture user={user} setUser={props.setUser} setAlert={props.setAlert} />\r\n\r\n            <form className=\"forms-sample\" onSubmit={async (e)=>{\r\n                e.preventDefault();\r\n                sendResetPwRequest()\r\n                return false;\r\n            }}> \r\n\r\n                <div className=\"form-group\">\r\n                    <label for=\"emailInput\">Email Address</label>\r\n                    <input placeholder=\"Email Address (Required)\" type=\"email\" id=\"emailInput\" className=\"form-control form-control-lg\" readOnly value={email} required />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"nameInput\">Display Name</label>\r\n                    <input placeholder=\"Display Name (Required)\" type=\"text\" id=\"nameInput\" className=\"form-control form-control\"  value={uname} required onChange={(e) => setUName(e.target.value)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"passwordInput\">Password</label>\r\n                    <input placeholder=\"Password (Required)\" type=\"password\" id=\"passwordInput\" className=\"form-control form-control\" value={password} required onChange={(e) => setPassword(e.target.value)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label for=\"newPasswordInput\">New Password</label>\r\n                    <input placeholder=\"Password\" type=\"password\" id=\"newPasswordInput\" className=\"form-control form-control\" value={newPassword} onChange={(e) => setNewPassword(e.target.value)} />\r\n                </div>\r\n                <button type=\"submit\" id=\"submitBtn\" className=\"btn btn-gradient-primary mr-2\" disabled>Save Change</button>\r\n                <button type=\"reset\" className=\"btn btn-light\">Reset</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AccountSettings;"]},"metadata":{},"sourceType":"module"}