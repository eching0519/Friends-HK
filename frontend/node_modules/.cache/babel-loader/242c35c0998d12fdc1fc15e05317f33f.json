{"ast":null,"code":"import _slicedToArray from \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\src\\\\app\\\\component\\\\settings\\\\uploadPicture.js\";\nimport React, { useState } from \"react\";\nimport Cropper from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\"; // import Cropper from \"https://unpkg.com/cropperjs\";\n// import \"https://unpkg.com/cropperjs/dist/cropper.css\"\n\nconst querystring = require('querystring');\n\nconst UploadPicture = props => {\n  let user = props.user;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        image = _useState2[0],\n        setImage = _useState2[1];\n\n  const _useState3 = useState(\"#\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        cropData = _useState4[0],\n        setCropData = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        cropper = _useState6[0],\n        setCropper = _useState6[1];\n\n  const imageRef = React.useRef(null);\n  var reader;\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        imageSrc = _useState8[0],\n        setImageSrc = _useState8[1];\n\n  const showModal = () => {// cropper = new Cropper(image, {\n    //     aspectRatio: 1,\n    //     viewMode: 3,\n    //     preview:'.preview'\n    // });\n  };\n\n  const changeImage = e => {\n    window.document.getElementById(\"showModalBtn\").click();\n    e.preventDefault();\n    let files;\n\n    if (e.dataTransfer) {\n      files = e.dataTransfer.files;\n    } else if (e.target) {\n      files = e.target.files;\n    }\n\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      setImage(reader.result);\n    };\n\n    reader.readAsDataURL(files[0]);\n  };\n\n  const getCropData = () => {\n    if (typeof cropper !== undefined) {\n      setCropData(cropper.getCroppedCanvas().toDataURL());\n      console.log(cropper);\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    class: \"image_area\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    method: \"post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"upload_image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: user == null || user.picture == null ? require(\"../../../assets/images/emptyFace.png\") : props.user.picture,\n    id: \"uploaded_image\",\n    class: \"img-responsive rounded-circle\",\n    width: \"200px\",\n    height: \"200px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    class: \"overlay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Click to Change Profile Image\")), React.createElement(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    class: \"image\",\n    id: \"upload_image\",\n    onChange: changeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    class: \"modal fade\",\n    id: \"modal\",\n    tabindex: \"-1\",\n    role: \"dialog\",\n    \"aria-labelledby\": \"modalLabel\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"modal-dialog modal-dialog-centered\",\n    role: \"document\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"modal-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"modal-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    class: \"modal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Crop Image Before Upload\"), React.createElement(\"button\", {\n    type: \"button\",\n    class: \"close\",\n    \"data-dismiss\": \"modal\",\n    \"aria-label\": \"Close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"\\xD7\"))), React.createElement(\"div\", {\n    class: \"modal-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"img-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"col-md-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Cropper, {\n    style: {\n      height: 400,\n      width: 400\n    },\n    aspectRatio: 1,\n    preview: \".preview\",\n    src: image,\n    viewMode: 3,\n    guides: true,\n    minCropBoxHeight: 10,\n    responsive: true,\n    onInitialized: instance => {\n      setCropper(instance);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    class: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"preview\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    class: \"modal-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    id: \"crop\",\n    class: \"btn btn-primary\",\n    onClick: getCropData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Crop\"), React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-secondary\",\n    \"data-dismiss\": \"modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Cancel\"))))), React.createElement(\"input\", {\n    id: \"showModalBtn\",\n    type: \"hidden\",\n    \"data-toggle\": \"modal\",\n    \"data-target\": \"#modal\",\n    onClick: () => {\n      showModal();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }));\n};\n\nexport default UploadPicture;","map":{"version":3,"sources":["Z:\\3100project\\Friends-HK\\frontend\\src\\app\\component\\settings\\uploadPicture.js"],"names":["React","useState","Cropper","querystring","require","UploadPicture","props","user","image","setImage","cropData","setCropData","cropper","setCropper","imageRef","useRef","reader","imageSrc","setImageSrc","showModal","changeImage","e","window","document","getElementById","click","preventDefault","files","dataTransfer","target","FileReader","onload","result","readAsDataURL","getCropData","undefined","getCroppedCanvas","toDataURL","console","log","picture","height","width","instance"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Cropper from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n// import Cropper from \"https://unpkg.com/cropperjs\";\r\n// import \"https://unpkg.com/cropperjs/dist/cropper.css\"\r\n\r\nconst querystring = require('querystring');\r\n\r\nconst UploadPicture = (props) => {\r\n    let user = props.user\r\n\r\n    const [image, setImage] = useState('');\r\n    const [cropData, setCropData] = useState(\"#\");\r\n    const [cropper, setCropper] = useState();\r\n    const imageRef = React.useRef(null);\r\n\r\n\r\n    var reader;\r\n    const [imageSrc, setImageSrc] = useState(\"\")\r\n\r\n    const showModal = () => {\r\n        // cropper = new Cropper(image, {\r\n        //     aspectRatio: 1,\r\n        //     viewMode: 3,\r\n        //     preview:'.preview'\r\n        // });\r\n    }\r\n\r\n    const changeImage = (e) => {\r\n        window.document.getElementById(\"showModalBtn\").click();\r\n        e.preventDefault();\r\n        let files;\r\n        if (e.dataTransfer) {\r\n            files = e.dataTransfer.files;\r\n        } else if (e.target) {\r\n            files = e.target.files;\r\n        }\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            setImage(reader.result);\r\n        }\r\n        reader.readAsDataURL(files[0]);\r\n    }\r\n\r\n    const getCropData = () => {\r\n        if (typeof cropper !== undefined) {\r\n            setCropData(cropper.getCroppedCanvas().toDataURL());\r\n            console.log(cropper)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div class=\"image_area\">\r\n                <form method=\"post\">\r\n                    <label for=\"upload_image\">\r\n                        <img src={(user==null||user.picture==null)? require(\"../../../assets/images/emptyFace.png\") : props.user.picture} id=\"uploaded_image\" class=\"img-responsive rounded-circle\" width=\"200px\" height=\"200px\" />\r\n                        <div class=\"overlay\">\r\n                            <div class=\"text\">Click to Change Profile Image</div>\r\n                        </div>\r\n                        <input type=\"file\" name=\"image\" class=\"image\" id=\"upload_image\" onChange={changeImage} />\r\n                    </label>\r\n                </form>\r\n            </div>\r\n\r\n            <div class=\"modal fade\" id=\"modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modalLabel\" aria-hidden=\"true\">\r\n\t\t\t  \t<div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n\t\t\t    \t<div class=\"modal-content\">\r\n\t\t\t      \t\t<div class=\"modal-header\">\r\n\t\t\t        \t\t<h5 class=\"modal-title\">Crop Image Before Upload</h5>\r\n\t\t\t        \t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n\t\t\t          \t\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t\t\t        \t\t</button>\r\n\t\t\t      \t\t</div>\r\n\t\t\t      \t\t<div class=\"modal-body\">\r\n\t\t\t        \t\t<div class=\"img-container\">\r\n\t\t\t            \t\t<div class=\"row\">\r\n\t\t\t                \t\t<div class=\"col-md-8\">\r\n                                        <Cropper style={{height: 400, width:400}} aspectRatio={1} preview=\".preview\" src={image} viewMode={3} guides={true} minCropBoxHeight={10} responsive={true} onInitialized={(instance) => {setCropper(instance)}} />\r\n\t\t\t                    \t\t{/* <img src={imageSrc} id=\"sample_image\" /> */}\r\n\t\t\t                \t\t</div>\r\n\t\t\t                \t\t<div class=\"col-md-4\">\r\n\t\t\t                    \t\t<div class=\"preview\"></div>\r\n\t\t\t                \t\t</div>\r\n\t\t\t            \t\t</div>\r\n\t\t\t        \t\t</div>\r\n\t\t\t      \t\t</div>\r\n\t\t\t      \t\t<div class=\"modal-footer\">\r\n\t\t\t      \t\t\t<button type=\"button\" id=\"crop\" class=\"btn btn-primary\" onClick={getCropData}>Crop</button>\r\n\t\t\t        \t\t<button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\r\n\t\t\t      \t\t</div>\r\n\t\t\t    \t</div>\r\n\t\t\t  \t</div>\r\n\t\t\t</div>\r\n            <input id=\"showModalBtn\" type=\"hidden\" data-toggle=\"modal\" data-target=\"#modal\" onClick={()=>{showModal()}} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UploadPicture;"]},"metadata":{},"sourceType":"module"}