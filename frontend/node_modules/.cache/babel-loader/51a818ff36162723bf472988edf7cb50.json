{"ast":null,"code":"import _slicedToArray from \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\src\\\\app\\\\component\\\\login\\\\ForgotPassword.js\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst querystring = require('querystring');\n\nconst ForgotPassword = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        verifyCode = _useState4[0],\n        setVerifyCode = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        password = _useState6[0],\n        setPassword = _useState6[1];\n\n  const sendVerifyEmail = async () => {\n    if (email === '') {\n      props.setAlert({\n        visible: true,\n        strongMsg: '',\n        msg: 'Please enter your email address'\n      });\n      return;\n    } else {\n      props.setAlert({\n        visible: false\n      });\n    }\n\n    let url = '/user/forgotPassword/mail';\n    let res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: \"email=\".concat(email)\n    });\n    let data = await res.json();\n    console.log(data);\n\n    if (!data.success) {\n      props.setAlert({\n        visible: true,\n        strongMsg: 'Sorry!',\n        msg: data.message\n      });\n    } else {\n      console.log(\"Email sent\");\n    }\n  };\n\n  const sendResetPwRequest = async () => {\n    let url = '/user/forgotPassword/reset';\n    let body = querystring.stringify({\n      email: email,\n      code: verifyCode,\n      password: password\n    });\n    let res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: body\n    });\n    let data;\n\n    try {\n      data = await res.json();\n    } catch (error) {\n      props.setAlert({\n        visible: true,\n        strongMsg: 'Error!',\n        msg: 'Please try again later. (' + error.message + ')'\n      });\n      return;\n    }\n\n    if (data.success) {\n      props.setAlert({\n        visible: false\n      });\n      props.setloginState('resetPwAlready');\n    } else {\n      props.setAlert({\n        visible: true,\n        strongMsg: 'Sorry!',\n        msg: data.message\n      });\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    className: \"pt-3\",\n    onSubmit: e => {\n      e.preventDefault();\n      sendResetPwRequest();\n      return false;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"emailInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Email address\"), React.createElement(\"input\", {\n    type: \"email\",\n    id: \"emailInput\",\n    placeholder: \"Email\",\n    size: \"lg\",\n    className: \"form-control form-control-lg\",\n    required: true,\n    onChange: event => {\n      setEmail(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"verifyCodeInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Verification Code\"), React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Email verification Code\",\n    type: \"text\",\n    id: \"verifyCodeInput\",\n    className: \"form-control form-control\",\n    required: true,\n    onChange: event => {\n      setVerifyCode(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-sm btn-gradient-primary\",\n    type: \"button\",\n    onClick: () => sendVerifyEmail(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Send\")))), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"passwordInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"New Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    id: \"passwordInput\",\n    placeholder: \"New Password\",\n    size: \"lg\",\n    className: \"form-control form-control\",\n    required: true,\n    onChange: event => {\n      setPassword(event.target.value);\n    },\n    value: props.userPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-gradient-primary mr-2 w-100 mb-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Reset Password\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light w-100\",\n    onClick: () => {\n      props.setAlert({\n        visible: false\n      });\n      props.setloginState('login');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    class: \"mdi mdi-keyboard-backspace\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), \"Back\"))));\n};\n\nexport default ForgotPassword;","map":{"version":3,"sources":["Z:\\3100project\\Friends-HK\\frontend\\src\\app\\component\\login\\ForgotPassword.js"],"names":["React","useState","Link","querystring","require","ForgotPassword","props","email","setEmail","verifyCode","setVerifyCode","password","setPassword","sendVerifyEmail","setAlert","visible","strongMsg","msg","url","res","fetch","method","headers","body","data","json","console","log","success","message","sendResetPwRequest","stringify","code","error","setloginState","e","preventDefault","event","target","value","userPassword"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst querystring = require('querystring');\r\n\r\nconst ForgotPassword = props => {\r\n    const [email, setEmail] = useState('');\r\n    const [verifyCode, setVerifyCode] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const sendVerifyEmail = async () => {\r\n        if (email === '') {\r\n            props.setAlert({\r\n                visible: true,\r\n                strongMsg: '',\r\n                msg: 'Please enter your email address'\r\n              })\r\n            return\r\n        } else {\r\n            props.setAlert({visible: false})\r\n        }\r\n\r\n        let url = '/user/forgotPassword/mail';\r\n        let res = await fetch(url, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            body: `email=${email}`,\r\n        });\r\n  \r\n        let data = await res.json();\r\n        console.log(data)\r\n  \r\n        if (!data.success) {\r\n          props.setAlert({\r\n            visible: true,\r\n            strongMsg: 'Sorry!',\r\n            msg: data.message\r\n          })\r\n        } else {\r\n          console.log(\"Email sent\")\r\n        }\r\n      }\r\n\r\n    const sendResetPwRequest = async () => {\r\n        let url = '/user/forgotPassword/reset';\r\n        let body = querystring.stringify({\r\n            email: email,\r\n            code: verifyCode,\r\n            password: password\r\n        });\r\n\r\n        let res = await fetch(url, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            body: body\r\n        });\r\n\r\n        let data\r\n        try {\r\n            data = await res.json();\r\n        } catch (error) {\r\n            props.setAlert({\r\n                visible: true,\r\n                strongMsg: 'Error!',\r\n                msg: 'Please try again later. (' + error.message + ')'\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (data.success) {\r\n            props.setAlert({visible: false})\r\n            props.setloginState('resetPwAlready');\r\n        } else {\r\n            props.setAlert({\r\n                visible: true,\r\n                strongMsg: 'Sorry!',\r\n                msg: data.message\r\n              })\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <form className=\"pt-3\" onSubmit={(e) => {\r\n            e.preventDefault();\r\n            sendResetPwRequest();\r\n            return false;\r\n        }}>\r\n            <div className=\"form-group\">\r\n                    <label for=\"emailInput\">Email address</label>\r\n                    <input type=\"email\" id=\"emailInput\" placeholder=\"Email\" size=\"lg\" className=\"form-control form-control-lg\" required onChange={(event) => {\r\n                        setEmail(event.target.value);\r\n                    }} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label for=\"verifyCodeInput\">Verification Code</label>\r\n                <div className=\"input-group\">\r\n                    <input placeholder=\"Email verification Code\" type=\"text\" id=\"verifyCodeInput\" className=\"form-control form-control\" required onChange={(event) => {\r\n                    setVerifyCode(event.target.value);\r\n                }} />\r\n                    <div className=\"input-group-append\"><button className=\"btn btn-sm btn-gradient-primary\" type=\"button\" onClick={()=> sendVerifyEmail()}\r\n                    >Send</button></div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label for=\"passwordInput\">New Password</label>\r\n                <input type=\"password\" id=\"passwordInput\" placeholder=\"New Password\" size=\"lg\" className=\"form-control form-control\" required onChange={(event) => {\r\n                    setPassword(event.target.value);\r\n                }} value={props.userPassword} />\r\n            </div>\r\n\r\n            <div className=\"mt-3\">\r\n                <button type=\"submit\" className=\"btn btn-gradient-primary mr-2 w-100 mb-2\">Reset Password</button>\r\n                <button type=\"button\" className=\"btn btn-light w-100\" onClick={() => {\r\n                    props.setAlert({visible: false});\r\n                    props.setloginState('login');\r\n                }}><i class=\"mdi mdi-keyboard-backspace\"></i>Back</button>\r\n            </div>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}