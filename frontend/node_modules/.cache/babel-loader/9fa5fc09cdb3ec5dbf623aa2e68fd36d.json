{"ast":null,"code":"import _slicedToArray from \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\src\\\\app\\\\component\\\\login\\\\LoginVerify.js\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst LoginVerify = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        verifyCode = _useState2[0],\n        setVerifyCode = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        disableInput = _useState4[0],\n        setDisableInput = _useState4[1];\n\n  const sendVerifyRequest = async () => {\n    let url = '/user/login/verify';\n    let body = \"code=\".concat(verifyCode);\n    let res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: body\n    });\n    let data = await res.json();\n    console.log(data);\n    setDisableInput(false);\n\n    if (data.success) {\n      //console.log('finally!!!!')\n      props.setloginState('success');\n    }\n  };\n\n  return React.createElement(\"form\", {\n    className: \"pt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"exampleInputUsername1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"input\", {\n    placeholder: \"Username\",\n    type: \"text\",\n    id: \"exampleInputUsername1\",\n    class: \"form-control form-control-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"d-flex search-field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Email verification Code\",\n    size: \"lg\",\n    className: \"h-auto\",\n    onChange: event => {\n      setVerifyCode(event.target.value);\n    },\n    disabled: disableInput,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    onClick: () => {\n      sendVerifyRequest().catch(error => {\n        setDisableInput(false);\n        console.log('server have some problem...');\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Confirm\")), React.createElement(\"div\", {\n    className: \"my-2 d-flex justify-content-between align-items-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"!#\",\n    className: \"auth-link text-black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Forgot password?\")));\n};\n\nexport default LoginVerify;","map":{"version":3,"sources":["Z:\\3100project\\Friends-HK\\frontend\\src\\app\\component\\login\\LoginVerify.js"],"names":["React","useState","Link","LoginVerify","props","verifyCode","setVerifyCode","disableInput","setDisableInput","sendVerifyRequest","url","body","res","fetch","method","headers","data","json","console","log","success","setloginState","event","target","value","catch","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA,oBACWH,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,QAClBI,UADkB;AAAA,QACNC,aADM;;AAAA,qBAEeL,QAAQ,CAAC,KAAD,CAFvB;AAAA;AAAA,QAElBM,YAFkB;AAAA,QAEJC,eAFI;;AAIzB,QAAMC,iBAAiB,GAAG,YAAY;AAElC,QAAIC,GAAG,GAAG,oBAAV;AACA,QAAIC,IAAI,kBAAWN,UAAX,CAAR;AAEA,QAAIO,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AACvBI,MAAAA,MAAM,EAAE,MADe;AAEvBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFc;AAGvBJ,MAAAA,IAAI,EAAEA;AAHiB,KAAN,CAArB;AAKA,QAAIK,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAR,IAAAA,eAAe,CAAC,KAAD,CAAf;;AACA,QAAIQ,IAAI,CAACI,OAAT,EAAkB;AACd;AACAhB,MAAAA,KAAK,CAACiB,aAAN,CAAoB,SAApB;AACH;AAEJ,GAnBD;;AAqBA,SACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,GAAG,EAAC,uBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAO,IAAA,WAAW,EAAC,UAAnB;AAA8B,IAAA,IAAI,EAAC,MAAnC;AAA0C,IAAA,EAAE,EAAC,uBAA7C;AAAqE,IAAA,KAAK,EAAC,8BAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAMI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,yBAA/B;AAAyD,IAAA,IAAI,EAAC,IAA9D;AAAmE,IAAA,SAAS,EAAC,QAA7E;AAAsF,IAAA,QAAQ,EAAGC,KAAD,IAAW;AACvGhB,MAAAA,aAAa,CAACgB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACH,KAFD;AAEG,IAAA,QAAQ,EAAEjB,YAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,EAYI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAkD,IAAA,OAAO,EACrD,MAAM;AACFE,MAAAA,iBAAiB,GAAGgB,KAApB,CAA2BC,KAAD,IAAW;AACjClB,QAAAA,eAAe,CAAC,KAAD,CAAf;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACH,OAHD;AAIH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CAZJ,EAsBI;AAAK,IAAA,SAAS,EAAC,wDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,IAAI,EAAC,IAAR;AAAa,IAAA,SAAS,EAAC,sBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CAtBJ,CADJ;AA4BH,CArDD;;AAuDA,eAAehB,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LoginVerify = props => {\r\n    const [verifyCode, setVerifyCode] = useState('');\r\n    const [disableInput, setDisableInput] = useState(false);\r\n\r\n    const sendVerifyRequest = async () => {\r\n\r\n        let url = '/user/login/verify';\r\n        let body = `code=${verifyCode}`;\r\n\r\n        let res = await fetch(url, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            body: body\r\n        });\r\n        let data = await res.json();\r\n        console.log(data);\r\n\r\n        setDisableInput(false);\r\n        if (data.success) {\r\n            //console.log('finally!!!!')\r\n            props.setloginState('success');\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <form className=\"pt-3\">\r\n            <div class=\"form-group\">\r\n                <label for=\"exampleInputUsername1\">Username</label>\r\n                <input placeholder=\"Username\" type=\"text\" id=\"exampleInputUsername1\" class=\"form-control form-control-lg\" />\r\n            </div>\r\n            \r\n            <div className=\"d-flex search-field\">\r\n                <input type=\"text\" placeholder=\"Email verification Code\" size=\"lg\" className=\"h-auto\" onChange={(event) => {\r\n                    setVerifyCode(event.target.value);\r\n                }} disabled={disableInput} />\r\n            </div>\r\n\r\n            <div className=\"mt-3\">\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={\r\n                    () => {\r\n                        sendVerifyRequest().catch((error) => {\r\n                            setDisableInput(false);\r\n                            console.log('server have some problem...');\r\n                        });\r\n                    }\r\n                }>Confirm</button>\r\n            </div>\r\n            <div className=\"my-2 d-flex justify-content-between align-items-center\">\r\n                <a href=\"!#\" className=\"auth-link text-black\">Forgot password?</a>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginVerify;"]},"metadata":{},"sourceType":"module"}