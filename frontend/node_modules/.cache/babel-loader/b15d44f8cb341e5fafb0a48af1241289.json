{"ast":null,"code":"import _slicedToArray from \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\src\\\\app\\\\App.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './App.scss';\nimport AppRoutes from './AppRoutes';\nimport Navbar from './shared/Navbar'; // import Sidebar from './shared/Sidebar';\n\nimport SettingsPanel from './shared/SettingsPanel';\nimport Footer from './shared/Footer';\nimport { withTranslation } from \"react-i18next\"; // class App extends Component {\n//   state = {}\n//   componentDidMount() {\n//     this.onRouteChanged();\n//   }\n//   render () {\n//     let user = JSON.parse(sessionStorage.getItem('UserProfile'));\n//     console.log(user)\n//     let navbarComponent = !this.state.isFullPageLayout ? <Navbar user={user}/> : '';\n//     // let sidebarComponent = !this.state.isFullPageLayout ? <Sidebar/> : '';\n//     let SettingsPanelComponent = !this.state.isFullPageLayout ? <SettingsPanel/> : '';\n//     let footerComponent = !this.state.isFullPageLayout ? <Footer/> : '';\n//     return (\n//       <div className=\"container-scroller\">\n//         { navbarComponent }\n//         <div className=\"container-fluid page-body-wrapper\">\n//           {/* { sidebarComponent } */}\n//           <div className=\"main-panel\">\n//             <div className=\"content-wrapper\">\n//               <AppRoutes user={user}/>\n//               { SettingsPanelComponent }\n//             </div>\n//             {/* { footerComponent } */}\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n//   componentDidUpdate(prevProps) {\n//     if (this.props.location !== prevProps.location) {\n//       this.onRouteChanged();\n//     }\n//   }\n//   onRouteChanged() {\n//     console.log(\"ROUTE CHANGED\");\n//     const { i18n } = this.props;\n//     const body = document.querySelector('body');\n//     if(this.props.location.pathname === '/layout/RtlLayout') {\n//       body.classList.add('rtl');\n//       i18n.changeLanguage('ar');\n//     }\n//     else {\n//       body.classList.remove('rtl')\n//       i18n.changeLanguage('en');\n//     }\n//     window.scrollTo(0, 0);\n//     const fullPageLayoutRoutes = ['/login', '/register', '/verify']\n//     fullPageLayoutRoutes.push('/user-pages/lockscreen', '/error-pages/error-404', '/error-pages/error-500', '/general-pages/landing-page');\n//     for ( let i = 0; i < fullPageLayoutRoutes.length; i++ ) {\n//       if (this.props.location.pathname === fullPageLayoutRoutes[i]) {\n//         this.setState({\n//           isFullPageLayout: true\n//         })\n//         document.querySelector('.page-body-wrapper').classList.add('full-page-wrapper');\n//         break;\n//       } else {\n//         this.setState({\n//           isFullPageLayout: false\n//         })\n//         document.querySelector('.page-body-wrapper').classList.remove('full-page-wrapper');\n//       }\n//     }\n//   }\n// }\n\nconst App = props => {\n  const _useState = useState(props.location),\n        _useState2 = _slicedToArray(_useState, 2),\n        location = _useState2[0],\n        setLocation = _useState2[1];\n\n  useEffect(() => {\n    console.log(\"ROUTE CHANGED\");\n    const i18n = this.props.i18n;\n    const body = document.querySelector('body');\n\n    if (this.props.location.pathname === '/layout/RtlLayout') {\n      body.classList.add('rtl');\n      i18n.changeLanguage('ar');\n    } else {\n      body.classList.remove('rtl');\n      i18n.changeLanguage('en');\n    }\n\n    window.scrollTo(0, 0);\n    const fullPageLayoutRoutes = ['/login', '/register', '/verify'];\n    fullPageLayoutRoutes.push('/user-pages/lockscreen', '/error-pages/error-404', '/error-pages/error-500', '/general-pages/landing-page');\n\n    for (let i = 0; i < fullPageLayoutRoutes.length; i++) {\n      if (this.props.location.pathname === fullPageLayoutRoutes[i]) {\n        this.setState({\n          isFullPageLayout: true\n        });\n        document.querySelector('.page-body-wrapper').classList.add('full-page-wrapper');\n        break;\n      } else {\n        this.setState({\n          isFullPageLayout: false\n        });\n        document.querySelector('.page-body-wrapper').classList.remove('full-page-wrapper');\n      }\n    }\n  });\n  let myUser = JSON.parse(sessionStorage.getItem('UserProfile'));\n\n  const _useState3 = useState(myUser),\n        _useState4 = _slicedToArray(_useState3, 2),\n        user = _useState4[0],\n        setUser = _useState4[1];\n\n  console.log(user);\n  let navbarComponent = !this.state.isFullPageLayout ? React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }) : ''; // let sidebarComponent = !this.state.isFullPageLayout ? <Sidebar/> : '';\n\n  let SettingsPanelComponent = !this.state.isFullPageLayout ? React.createElement(SettingsPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }) : '';\n  let footerComponent = !this.state.isFullPageLayout ? React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }) : '';\n  return React.createElement(\"div\", {\n    className: \"container-scroller\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, navbarComponent, React.createElement(\"div\", {\n    className: \"container-fluid page-body-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"main-panel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(AppRoutes, {\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), SettingsPanelComponent))));\n};\n\nexport default withTranslation()(withRouter(App));","map":{"version":3,"sources":["Z:\\3100project\\Friends-HK\\frontend\\src\\app\\App.js"],"names":["React","Component","useEffect","useState","withRouter","AppRoutes","Navbar","SettingsPanel","Footer","withTranslation","App","props","location","setLocation","console","log","i18n","body","document","querySelector","pathname","classList","add","changeLanguage","remove","window","scrollTo","fullPageLayoutRoutes","push","i","length","setState","isFullPageLayout","myUser","JSON","parse","sessionStorage","getItem","user","setUser","navbarComponent","state","SettingsPanelComponent","footerComponent"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './App.scss';\r\nimport AppRoutes from './AppRoutes';\r\nimport Navbar from './shared/Navbar';\r\n// import Sidebar from './shared/Sidebar';\r\nimport SettingsPanel from './shared/SettingsPanel';\r\nimport Footer from './shared/Footer';\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\n\r\n\r\n// class App extends Component {\r\n//   state = {}\r\n//   componentDidMount() {\r\n//     this.onRouteChanged();\r\n//   }\r\n\r\n//   render () {\r\n//     let user = JSON.parse(sessionStorage.getItem('UserProfile'));\r\n//     console.log(user)\r\n\r\n//     let navbarComponent = !this.state.isFullPageLayout ? <Navbar user={user}/> : '';\r\n//     // let sidebarComponent = !this.state.isFullPageLayout ? <Sidebar/> : '';\r\n//     let SettingsPanelComponent = !this.state.isFullPageLayout ? <SettingsPanel/> : '';\r\n//     let footerComponent = !this.state.isFullPageLayout ? <Footer/> : '';\r\n//     return (\r\n//       <div className=\"container-scroller\">\r\n//         { navbarComponent }\r\n//         <div className=\"container-fluid page-body-wrapper\">\r\n//           {/* { sidebarComponent } */}\r\n//           <div className=\"main-panel\">\r\n//             <div className=\"content-wrapper\">\r\n//               <AppRoutes user={user}/>\r\n//               { SettingsPanelComponent }\r\n//             </div>\r\n//             {/* { footerComponent } */}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   componentDidUpdate(prevProps) {\r\n//     if (this.props.location !== prevProps.location) {\r\n//       this.onRouteChanged();\r\n//     }\r\n//   }\r\n\r\n//   onRouteChanged() {\r\n//     console.log(\"ROUTE CHANGED\");\r\n//     const { i18n } = this.props;\r\n//     const body = document.querySelector('body');\r\n//     if(this.props.location.pathname === '/layout/RtlLayout') {\r\n//       body.classList.add('rtl');\r\n//       i18n.changeLanguage('ar');\r\n//     }\r\n//     else {\r\n//       body.classList.remove('rtl')\r\n//       i18n.changeLanguage('en');\r\n//     }\r\n//     window.scrollTo(0, 0);\r\n//     const fullPageLayoutRoutes = ['/login', '/register', '/verify']\r\n//     fullPageLayoutRoutes.push('/user-pages/lockscreen', '/error-pages/error-404', '/error-pages/error-500', '/general-pages/landing-page');\r\n    \r\n//     for ( let i = 0; i < fullPageLayoutRoutes.length; i++ ) {\r\n//       if (this.props.location.pathname === fullPageLayoutRoutes[i]) {\r\n//         this.setState({\r\n//           isFullPageLayout: true\r\n//         })\r\n//         document.querySelector('.page-body-wrapper').classList.add('full-page-wrapper');\r\n//         break;\r\n//       } else {\r\n//         this.setState({\r\n//           isFullPageLayout: false\r\n//         })\r\n//         document.querySelector('.page-body-wrapper').classList.remove('full-page-wrapper');\r\n//       }\r\n//     }\r\n//   }\r\n\r\n// }\r\n\r\nconst App = (props) => {\r\n  const [location, setLocation] = useState(props.location)\r\n\r\n  useEffect(()=> {\r\n    console.log(\"ROUTE CHANGED\");\r\n    const { i18n } = this.props;\r\n    const body = document.querySelector('body');\r\n    if(this.props.location.pathname === '/layout/RtlLayout') {\r\n      body.classList.add('rtl');\r\n      i18n.changeLanguage('ar');\r\n    }\r\n    else {\r\n      body.classList.remove('rtl')\r\n      i18n.changeLanguage('en');\r\n    }\r\n    window.scrollTo(0, 0);\r\n    const fullPageLayoutRoutes = ['/login', '/register', '/verify']\r\n    fullPageLayoutRoutes.push('/user-pages/lockscreen', '/error-pages/error-404', '/error-pages/error-500', '/general-pages/landing-page');\r\n    \r\n    for ( let i = 0; i < fullPageLayoutRoutes.length; i++ ) {\r\n      if (this.props.location.pathname === fullPageLayoutRoutes[i]) {\r\n        this.setState({\r\n          isFullPageLayout: true\r\n        })\r\n        document.querySelector('.page-body-wrapper').classList.add('full-page-wrapper');\r\n        break;\r\n      } else {\r\n        this.setState({\r\n          isFullPageLayout: false\r\n        })\r\n        document.querySelector('.page-body-wrapper').classList.remove('full-page-wrapper');\r\n      }\r\n    }\r\n  });\r\n\r\n\r\n  let myUser = JSON.parse(sessionStorage.getItem('UserProfile'));\r\n  const [user, setUser] = useState(myUser)\r\n  console.log(user)\r\n\r\n  let navbarComponent = !this.state.isFullPageLayout ? <Navbar /> : '';\r\n  // let sidebarComponent = !this.state.isFullPageLayout ? <Sidebar/> : '';\r\n  let SettingsPanelComponent = !this.state.isFullPageLayout ? <SettingsPanel/> : '';\r\n  let footerComponent = !this.state.isFullPageLayout ? <Footer/> : '';\r\n  return (\r\n    <div className=\"container-scroller\">\r\n      { navbarComponent }\r\n      <div className=\"container-fluid page-body-wrapper\">\r\n        {/* { sidebarComponent } */}\r\n        <div className=\"main-panel\">\r\n          <div className=\"content-wrapper\">\r\n            <AppRoutes user={user}/>\r\n            { SettingsPanelComponent }\r\n          </div>\r\n          {/* { footerComponent } */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withTranslation() (withRouter(App));\r\n"]},"metadata":{},"sourceType":"module"}