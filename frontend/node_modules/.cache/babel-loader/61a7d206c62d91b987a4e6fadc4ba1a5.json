{"ast":null,"code":"var _jsxFileName = \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\src\\\\app\\\\App.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './App.scss';\nimport AppRoutes from './AppRoutes';\nimport Navbar from './shared/Navbar'; // import Sidebar from './shared/Sidebar';\n\nimport SettingsPanel from './shared/SettingsPanel';\nimport Footer from './shared/Footer';\nimport { withTranslation } from \"react-i18next\"; // class App extends Component {\n//   state = {}\n//   componentDidMount() {\n//     this.onRouteChanged();\n//   }\n//   render () {\n//     let myUser = JSON.parse(sessionStorage.getItem('UserProfile'));\n//     console.log(user)\n//     let navbarComponent = !this.state.isFullPageLayout ? <Navbar user={user}/> : '';\n//     // let sidebarComponent = !this.state.isFullPageLayout ? <Sidebar/> : '';\n//     let SettingsPanelComponent = !this.state.isFullPageLayout ? <SettingsPanel/> : '';\n//     let footerComponent = !this.state.isFullPageLayout ? <Footer/> : '';\n//     return (\n//       <div className=\"container-scroller\">\n//         { navbarComponent }\n//         <div className=\"container-fluid page-body-wrapper\">\n//           {/* { sidebarComponent } */}\n//           <div className=\"main-panel\">\n//             <div className=\"content-wrapper\">\n//               <AppRoutes user={user}/>\n//               { SettingsPanelComponent }\n//             </div>\n//             {/* { footerComponent } */}\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n//   componentDidUpdate(prevProps) {\n//     if (this.props.location !== prevProps.location) {\n//       this.onRouteChanged();\n//     }\n//   }\n//   onRouteChanged() {\n//     console.log(\"ROUTE CHANGED\");\n//     const { i18n } = this.props;\n//     const body = document.querySelector('body');\n//     if(this.props.location.pathname === '/layout/RtlLayout') {\n//       body.classList.add('rtl');\n//       i18n.changeLanguage('ar');\n//     }\n//     else {\n//       body.classList.remove('rtl')\n//       i18n.changeLanguage('en');\n//     }\n//     window.scrollTo(0, 0);\n//     const fullPageLayoutRoutes = ['/login', '/register', '/verify']\n//     fullPageLayoutRoutes.push('/user-pages/lockscreen', '/error-pages/error-404', '/error-pages/error-500', '/general-pages/landing-page');\n//     for ( let i = 0; i < fullPageLayoutRoutes.length; i++ ) {\n//       if (this.props.location.pathname === fullPageLayoutRoutes[i]) {\n//         this.setState({\n//           isFullPageLayout: true\n//         })\n//         document.querySelector('.page-body-wrapper').classList.add('full-page-wrapper');\n//         break;\n//       } else {\n//         this.setState({\n//           isFullPageLayout: false\n//         })\n//         document.querySelector('.page-body-wrapper').classList.remove('full-page-wrapper');\n//       }\n//     }\n//   }\n// }\n\nconst App = () => {\n  let myUser = JSON.parse(sessionStorage.getItem('UserProfile'));\n  console.log(user);\n  let navbarComponent = !this.state.isFullPageLayout ? React.createElement(Navbar, {\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }) : ''; // let sidebarComponent = !this.state.isFullPageLayout ? <Sidebar/> : '';\n\n  let SettingsPanelComponent = !this.state.isFullPageLayout ? React.createElement(SettingsPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }) : '';\n  let footerComponent = !this.state.isFullPageLayout ? React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }) : '';\n  return React.createElement(\"div\", {\n    className: \"container-scroller\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, navbarComponent, React.createElement(\"div\", {\n    className: \"container-fluid page-body-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"main-panel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"content-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(AppRoutes, {\n    user: user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), SettingsPanelComponent))));\n};\n\nexport default withTranslation()(withRouter(App));","map":{"version":3,"sources":["Z:\\3100project\\Friends-HK\\frontend\\src\\app\\App.js"],"names":["React","Component","withRouter","AppRoutes","Navbar","SettingsPanel","Footer","withTranslation","App","myUser","JSON","parse","sessionStorage","getItem","console","log","user","navbarComponent","state","isFullPageLayout","SettingsPanelComponent","footerComponent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,iBAAnB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,eAAT,QAAgC,eAAhC,C,CAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,MAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,aAAvB,CAAX,CAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAEA,MAAIC,eAAe,GAAG,CAAC,KAAKC,KAAL,CAAWC,gBAAZ,GAA+B,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEH,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/B,GAAuD,EAA7E,CAJgB,CAKhB;;AACA,MAAII,sBAAsB,GAAG,CAAC,KAAKF,KAAL,CAAWC,gBAAZ,GAA+B,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/B,GAAkD,EAA/E;AACA,MAAIE,eAAe,GAAG,CAAC,KAAKH,KAAL,CAAWC,gBAAZ,GAA+B,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/B,GAA2C,EAAjE;AACA,SACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIF,eADJ,EAEE;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAED,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEII,sBAFJ,CADF,CAFF,CAFF,CADF;AAeD,CAvBD;;AAyBA,eAAeb,eAAe,GAAIL,UAAU,CAACM,GAAD,CAAd,CAA9B","sourcesContent":["import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './App.scss';\r\nimport AppRoutes from './AppRoutes';\r\nimport Navbar from './shared/Navbar';\r\n// import Sidebar from './shared/Sidebar';\r\nimport SettingsPanel from './shared/SettingsPanel';\r\nimport Footer from './shared/Footer';\r\nimport { withTranslation } from \"react-i18next\";\r\n\r\n\r\n\r\n// class App extends Component {\r\n//   state = {}\r\n//   componentDidMount() {\r\n//     this.onRouteChanged();\r\n//   }\r\n\r\n//   render () {\r\n//     let myUser = JSON.parse(sessionStorage.getItem('UserProfile'));\r\n//     console.log(user)\r\n\r\n//     let navbarComponent = !this.state.isFullPageLayout ? <Navbar user={user}/> : '';\r\n//     // let sidebarComponent = !this.state.isFullPageLayout ? <Sidebar/> : '';\r\n//     let SettingsPanelComponent = !this.state.isFullPageLayout ? <SettingsPanel/> : '';\r\n//     let footerComponent = !this.state.isFullPageLayout ? <Footer/> : '';\r\n//     return (\r\n//       <div className=\"container-scroller\">\r\n//         { navbarComponent }\r\n//         <div className=\"container-fluid page-body-wrapper\">\r\n//           {/* { sidebarComponent } */}\r\n//           <div className=\"main-panel\">\r\n//             <div className=\"content-wrapper\">\r\n//               <AppRoutes user={user}/>\r\n//               { SettingsPanelComponent }\r\n//             </div>\r\n//             {/* { footerComponent } */}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   componentDidUpdate(prevProps) {\r\n//     if (this.props.location !== prevProps.location) {\r\n//       this.onRouteChanged();\r\n//     }\r\n//   }\r\n\r\n//   onRouteChanged() {\r\n//     console.log(\"ROUTE CHANGED\");\r\n//     const { i18n } = this.props;\r\n//     const body = document.querySelector('body');\r\n//     if(this.props.location.pathname === '/layout/RtlLayout') {\r\n//       body.classList.add('rtl');\r\n//       i18n.changeLanguage('ar');\r\n//     }\r\n//     else {\r\n//       body.classList.remove('rtl')\r\n//       i18n.changeLanguage('en');\r\n//     }\r\n//     window.scrollTo(0, 0);\r\n//     const fullPageLayoutRoutes = ['/login', '/register', '/verify']\r\n//     fullPageLayoutRoutes.push('/user-pages/lockscreen', '/error-pages/error-404', '/error-pages/error-500', '/general-pages/landing-page');\r\n    \r\n//     for ( let i = 0; i < fullPageLayoutRoutes.length; i++ ) {\r\n//       if (this.props.location.pathname === fullPageLayoutRoutes[i]) {\r\n//         this.setState({\r\n//           isFullPageLayout: true\r\n//         })\r\n//         document.querySelector('.page-body-wrapper').classList.add('full-page-wrapper');\r\n//         break;\r\n//       } else {\r\n//         this.setState({\r\n//           isFullPageLayout: false\r\n//         })\r\n//         document.querySelector('.page-body-wrapper').classList.remove('full-page-wrapper');\r\n//       }\r\n//     }\r\n//   }\r\n\r\n// }\r\n\r\nconst App = () => {\r\n  let myUser = JSON.parse(sessionStorage.getItem('UserProfile'));\r\n  console.log(user)\r\n\r\n  let navbarComponent = !this.state.isFullPageLayout ? <Navbar user={user}/> : '';\r\n  // let sidebarComponent = !this.state.isFullPageLayout ? <Sidebar/> : '';\r\n  let SettingsPanelComponent = !this.state.isFullPageLayout ? <SettingsPanel/> : '';\r\n  let footerComponent = !this.state.isFullPageLayout ? <Footer/> : '';\r\n  return (\r\n    <div className=\"container-scroller\">\r\n      { navbarComponent }\r\n      <div className=\"container-fluid page-body-wrapper\">\r\n        {/* { sidebarComponent } */}\r\n        <div className=\"main-panel\">\r\n          <div className=\"content-wrapper\">\r\n            <AppRoutes user={user}/>\r\n            { SettingsPanelComponent }\r\n          </div>\r\n          {/* { footerComponent } */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withTranslation() (withRouter(App));\r\n"]},"metadata":{},"sourceType":"module"}