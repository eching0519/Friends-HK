{"ast":null,"code":"const querystring = require('querystring');\n\nconst LoginVerifier = async props => {\n  if (props.user === undefined) {\n    // window.location.replace(\"/login\");\n    console.log(\"Is Null\");\n    return;\n  } // Check client session\n\n\n  let myUser = JSON.parse(sessionStorage.getItem('UserProfile'));\n  let url = '/checkSession';\n  let res = await fetch(url, {\n    method: 'GET'\n  }); // Check server session\n\n  let data;\n  var msgUrl;\n\n  try {\n    data = await res.json();\n  } catch (error) {\n    msgUrl = querystring.encode({\n      smsg: 'Error!',\n      msg: \"Unexpected error. (\".concat(error.message, \")\")\n    });\n    window.location.replace(\"/login?\" + msgUrl);\n    return;\n  }\n\n  const loginVerification = data.verification;\n\n  if (loginVerification) {\n    if (loginVerification.email !== myUser.email && loginVerification.verified) {\n      msgUrl = querystring.encode({\n        smsg: 'Sorry!',\n        msg: \"Session is invalid. Please login again.\"\n      });\n      window.location.replace(\"/login?\" + msgUrl);\n      return;\n    }\n  }\n\n  console.log(\"Pass\");\n};\n\nexport default LoginVerifier;","map":{"version":3,"sources":["Z:\\3100project\\Friends-HK\\frontend\\src\\app\\component\\common\\LoginVerifier.js"],"names":["querystring","require","LoginVerifier","props","user","undefined","console","log","myUser","JSON","parse","sessionStorage","getItem","url","res","fetch","method","data","msgUrl","json","error","encode","smsg","msg","message","window","location","replace","loginVerification","verification","email","verified"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,aAAD,CAA3B;;AAEA,MAAMC,aAAa,GAAG,MAAOC,KAAP,IAAiB;AAEnC,MAAIA,KAAK,CAACC,IAAN,KAAeC,SAAnB,EAA8B;AAC1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA;AACH,GANkC,CAQnC;;;AACA,MAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,aAAvB,CAAX,CAAb;AAEA,MAAIC,GAAG,GAAG,eAAV;AACA,MAAIC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AACvBG,IAAAA,MAAM,EAAE;AADe,GAAN,CAArB,CAZmC,CAgBnC;;AACA,MAAIC,IAAJ;AACA,MAAIC,MAAJ;;AACA,MAAI;AACAD,IAAAA,IAAI,GAAG,MAAMH,GAAG,CAACK,IAAJ,EAAb;AACH,GAFD,CAEE,OAAOC,KAAP,EAAc;AACZF,IAAAA,MAAM,GAAGlB,WAAW,CAACqB,MAAZ,CAAmB;AAACC,MAAAA,IAAI,EAAC,QAAN;AAAgBC,MAAAA,GAAG,+BAAwBH,KAAK,CAACI,OAA9B;AAAnB,KAAnB,CAAT;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,YAAYT,MAApC;AACA;AACH;;AAED,QAAMU,iBAAiB,GAAGX,IAAI,CAACY,YAA/B;;AACA,MAAID,iBAAJ,EAAuB;AACnB,QAAIA,iBAAiB,CAACE,KAAlB,KAA4BtB,MAAM,CAACsB,KAAnC,IAA4CF,iBAAiB,CAACG,QAAlE,EAA4E;AACxEb,MAAAA,MAAM,GAAGlB,WAAW,CAACqB,MAAZ,CAAmB;AAACC,QAAAA,IAAI,EAAC,QAAN;AAAgBC,QAAAA,GAAG;AAAnB,OAAnB,CAAT;AACAE,MAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,YAAYT,MAApC;AACA;AACH;AACJ;;AAEDZ,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,CArCD;;AAuCA,eAAeL,aAAf","sourcesContent":["const querystring = require('querystring');\r\n\r\nconst LoginVerifier = async (props) => {\r\n\r\n    if (props.user === undefined) {\r\n        // window.location.replace(\"/login\");\r\n        console.log(\"Is Null\")\r\n        return\r\n    }\r\n\r\n    // Check client session\r\n    let myUser = JSON.parse(sessionStorage.getItem('UserProfile'));\r\n    \r\n    let url = '/checkSession';\r\n    let res = await fetch(url, {\r\n        method: 'GET',\r\n    });\r\n\r\n    // Check server session\r\n    let data;\r\n    var msgUrl;\r\n    try {\r\n        data = await res.json();\r\n    } catch (error) {\r\n        msgUrl = querystring.encode({smsg:'Error!', msg: `Unexpected error. (${error.message})`})\r\n        window.location.replace(\"/login?\" + msgUrl);\r\n        return\r\n    }\r\n\r\n    const loginVerification = data.verification;\r\n    if (loginVerification) {\r\n        if (loginVerification.email !== myUser.email && loginVerification.verified) {\r\n            msgUrl = querystring.encode({smsg:'Sorry!', msg: `Session is invalid. Please login again.`})\r\n            window.location.replace(\"/login?\" + msgUrl);\r\n            return\r\n        }\r\n    }\r\n\r\n    console.log(\"Pass\")\r\n}\r\n\r\nexport default LoginVerifier;"]},"metadata":{},"sourceType":"module"}