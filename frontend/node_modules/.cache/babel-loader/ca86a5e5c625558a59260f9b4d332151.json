{"ast":null,"code":"import _slicedToArray from \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"Z:\\\\3100project\\\\Friends-HK\\\\frontend\\\\src\\\\app\\\\component\\\\settings\\\\profile.js\";\nimport React, { useEffect, useState } from \"react\";\nimport UploadPicture from \"./uploadPicture\";\nimport $ from 'jquery';\nimport { Form } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\n\nconst querystring = require('querystring'); // Language\n// Basic: Gender(多元), Date of birth (星座), City & Country (Can set Undefined)\n// Introduction questions: 3 (Facts about me)\n// Hobby\n// Topic you are Interest\n// Friends preference: Gender, Age range, Language\n\n\nconst ProfileSettings = props => {\n  const _useState = useState(props.user),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const _useState3 = useState(props.user === null ? '' : props.user.email),\n        _useState4 = _slicedToArray(_useState3, 2),\n        email = _useState4[0],\n        setEmail = _useState4[1];\n\n  const _useState5 = useState(props.user === null ? '' : props.user.name),\n        _useState6 = _slicedToArray(_useState5, 2),\n        uname = _useState6[0],\n        setUName = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        password = _useState8[0],\n        setPassword = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        newPassword = _useState10[0],\n        setNewPassword = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        isLoaded = _useState12[0],\n        setLoaded = _useState12[1]; // Check if page is loaded\n\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        dob = _useState14[0],\n        setDOB = _useState14[1]; // Run when form is changed\n\n\n  useEffect(() => {\n    if (!isLoaded) {\n      setLoaded(true);\n      return;\n    }\n\n    console.log(\"Form has changed\");\n    props.setFormChanged(true);\n    $(\"#submitBtn\").removeClass('disabled');\n  }, [email, uname, password, newPassword]);\n\n  const sendResetPwRequest = async () => {\n    let url = '/user/profile/update';\n    let res = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: querystring.stringify({\n        name: uname,\n        password: password,\n        newPassword: newPassword\n      })\n    });\n    let data;\n\n    try {\n      data = await res.json();\n    } catch (error) {\n      props.setAlert({\n        visible: true,\n        strongMsg: 'Error!',\n        msg: \"Unexpected error. (\".concat(error.message, \")\")\n      });\n      return;\n    }\n\n    if (!data.success) {\n      props.setAlert({\n        visible: true,\n        strongMsg: 'Sorry!',\n        msg: \"\".concat(data.message)\n      });\n      return;\n    }\n\n    setUser(data.user);\n    props.setUser(data.user);\n    window.alert(\"Your information is updated\");\n    resetForm();\n  };\n\n  const resetForm = () => {\n    $('#submitBtn').addClass('disabled').promise().then(\"class added\");\n    setEmail(user.email);\n    setUName(user.name);\n    setPassword('');\n    setNewPassword('');\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    className: \"forms-sample\",\n    onSubmit: async e => {\n      e.preventDefault();\n      sendResetPwRequest();\n      return false;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"card-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Profile\"), React.createElement(\"p\", {\n    className: \"card-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Basic Information\"), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Gender\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Male\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Female\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Non-binary\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Not Declare\"))))), React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Birth\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    className: \"form-control w-100\",\n    selected: dob,\n    onChange: setDOB,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })))))), React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"card-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Preference\"), React.createElement(\"div\", {\n    className: \"form-group row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"emailInput\",\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Email Address\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Email Address (Required)\",\n    type: \"email\",\n    id: \"emailInput\",\n    className: \"form-control form-control-lg\",\n    readOnly: true,\n    value: email,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"nameInput\",\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Display Name\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Display Name (Required)\",\n    type: \"text\",\n    id: \"nameInput\",\n    className: \"form-control form-control\",\n    value: uname,\n    required: true,\n    onChange: e => setUName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"passwordInput\",\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Password (Required)\",\n    type: \"password\",\n    id: \"passwordInput\",\n    className: \"form-control form-control\",\n    value: password,\n    required: true,\n    onChange: e => setPassword(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-group row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    for: \"newPasswordInput\",\n    className: \"col-sm-3 col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"New Password\"), React.createElement(\"div\", {\n    className: \"col-sm-9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Password\",\n    type: \"password\",\n    id: \"newPasswordInput\",\n    className: \"form-control form-control\",\n    value: newPassword,\n    onChange: e => setNewPassword(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    class: \"text-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    id: \"submitBtn\",\n    className: \"btn btn-gradient-primary mr-2 disabled\",\n    onClick: e => {\n      if (e.target.classList.contains('disabled')) e.preventDefault();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Save Change\"), React.createElement(\"button\", {\n    type: \"reset\",\n    className: \"btn btn-light\",\n    onClick: e => {\n      e.preventDefault();\n      resetForm();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Reset\")))));\n};\n\nexport default ProfileSettings;","map":{"version":3,"sources":["Z:\\3100project\\Friends-HK\\frontend\\src\\app\\component\\settings\\profile.js"],"names":["React","useEffect","useState","UploadPicture","$","Form","DatePicker","querystring","require","ProfileSettings","props","user","setUser","email","setEmail","name","uname","setUName","password","setPassword","newPassword","setNewPassword","isLoaded","setLoaded","dob","setDOB","console","log","setFormChanged","removeClass","sendResetPwRequest","url","res","fetch","method","headers","body","stringify","data","json","error","setAlert","visible","strongMsg","msg","message","success","window","alert","resetForm","addClass","promise","then","e","preventDefault","target","value","classList","contains"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport UploadPicture from \"./uploadPicture\";\r\nimport $ from 'jquery';\r\n\r\nimport { Form } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nconst querystring = require('querystring');\r\n\r\n\r\n// Language\r\n// Basic: Gender(多元), Date of birth (星座), City & Country (Can set Undefined)\r\n// Introduction questions: 3 (Facts about me)\r\n// Hobby\r\n// Topic you are Interest\r\n// Friends preference: Gender, Age range, Language\r\n\r\nconst ProfileSettings = (props) => {\r\n    const [user, setUser] = useState(props.user)\r\n    const [email, setEmail] = useState(props.user===null?'':props.user.email)\r\n    const [uname, setUName] = useState(props.user===null?'':props.user.name)\r\n    const [password, setPassword] = useState('')\r\n    const [newPassword, setNewPassword] = useState('')\r\n    const [isLoaded, setLoaded] = useState(false)   // Check if page is loaded\r\n\r\n    const [dob, setDOB] = useState('');\r\n    \r\n    // Run when form is changed\r\n    useEffect(()=> {\r\n        if (!isLoaded) {\r\n            setLoaded(true);\r\n            return\r\n        }\r\n\r\n        console.log(\"Form has changed\")\r\n        props.setFormChanged(true)\r\n        $(\"#submitBtn\").removeClass('disabled')\r\n    }, [email, uname, password, newPassword]);\r\n\r\n    const sendResetPwRequest = async () => {\r\n        let url = '/user/profile/update';\r\n\r\n        let res = await fetch(url, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            body: querystring.stringify({\r\n                name: uname,\r\n                password: password,\r\n                newPassword: newPassword\r\n            })\r\n        });\r\n\r\n        let data\r\n        try {\r\n            data = await res.json();\r\n        } catch (error) {\r\n            props.setAlert({\r\n                visible: true,\r\n                strongMsg: 'Error!',\r\n                msg: `Unexpected error. (${error.message})`\r\n            })\r\n            return;\r\n        }\r\n\r\n        if (!data.success) {\r\n            props.setAlert({\r\n                visible: true,\r\n                strongMsg: 'Sorry!',\r\n                msg: `${data.message}`\r\n            })\r\n            return;\r\n        }\r\n\r\n        setUser(data.user)\r\n        props.setUser(data.user)\r\n        window.alert(\"Your information is updated\")\r\n        resetForm()\r\n    };\r\n\r\n    const resetForm = () => {\r\n        $('#submitBtn').addClass('disabled').promise().then(\"class added\")\r\n        setEmail(user.email)\r\n        setUName(user.name)\r\n        setPassword('')\r\n        setNewPassword('')\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form className=\"forms-sample\" onSubmit={async (e)=>{\r\n                e.preventDefault();\r\n                sendResetPwRequest()\r\n                return false;\r\n            }}> \r\n\r\n        <div className=\"card-body\">\r\n            <h4 className=\"card-title\">Profile</h4>\r\n            <p className=\"card-description\">Basic Information</p>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                    <label className=\"col-sm-3 col-form-label\">Gender</label>\r\n                    <div className=\"col-sm-9\">\r\n                        <select className=\"form-control\">\r\n                        <option>Male</option>\r\n                        <option>Female</option>\r\n                        <option>Non-binary</option>\r\n                        <option>Not Declare</option>\r\n                        </select>\r\n                    </div>\r\n                    </Form.Group>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <Form.Group className=\"row\">\r\n                    <label className=\"col-sm-3 col-form-label\">Birth</label>\r\n                    <div className=\"col-sm-9\">\r\n                    <DatePicker className=\"form-control w-100\"\r\n                        selected={dob}\r\n                        onChange={setDOB}\r\n                    />\r\n                    </div>\r\n                    </Form.Group>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"card-body\">\r\n            <p className=\"card-description\">Preference</p>\r\n            \r\n\r\n            <div className=\"form-group row\">\r\n                <label for=\"emailInput\" className=\"col-sm-3 col-form-label\">Email Address</label>\r\n                <div className=\"col-sm-9\">\r\n                    <input placeholder=\"Email Address (Required)\" type=\"email\" id=\"emailInput\" className=\"form-control form-control-lg\" readOnly value={email} required />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n                <label for=\"nameInput\" className=\"col-sm-3 col-form-label\">Display Name</label>\r\n                <div className=\"col-sm-9\">\r\n                    <input placeholder=\"Display Name (Required)\" type=\"text\" id=\"nameInput\" className=\"form-control form-control\"  value={uname} required onChange={(e) => setUName(e.target.value)} />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n                <label for=\"passwordInput\" className=\"col-sm-3 col-form-label\">Password</label>\r\n                <div className=\"col-sm-9\">\r\n                    <input placeholder=\"Password (Required)\" type=\"password\" id=\"passwordInput\" className=\"form-control form-control\" value={password} required onChange={(e) => setPassword(e.target.value)} />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n                <label for=\"newPasswordInput\" className=\"col-sm-3 col-form-label\">New Password</label>\r\n                <div className=\"col-sm-9\">\r\n                    <input placeholder=\"Password\" type=\"password\" id=\"newPasswordInput\" className=\"form-control form-control\" value={newPassword} onChange={(e) => setNewPassword(e.target.value)} />\r\n                </div>\r\n            </div>\r\n            <div class=\"text-right\">\r\n            <button type=\"submit\" id=\"submitBtn\" className=\"btn btn-gradient-primary mr-2 disabled\" onClick={(e)=>{\r\n                if (e.target.classList.contains('disabled'))\r\n                    e.preventDefault();\r\n            }}>Save Change</button>\r\n            <button type=\"reset\" className=\"btn btn-light\" onClick={(e)=>{e.preventDefault(); resetForm();}}>Reset</button>\r\n            </div>\r\n            \r\n        </div>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileSettings;"]},"metadata":{},"sourceType":"module"}