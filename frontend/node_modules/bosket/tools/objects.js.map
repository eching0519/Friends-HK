{"version":3,"sources":["../../src/tools/objects.js"],"names":["object","self","Object","Error","shallowCompare","obj","excludes","equals","key","hasOwnProperty","indexOf","filter","fun","copy","prop","map","fullMap","newProp","newVal","nestPrefix","prefix","transform","_","startsWith","substring","length"],"mappings":";;;;AAEA,OAAO,IAAMA,SAAS,SAATA,MAAS,CAACC,IAAD,EAAkB;AACpC,QAAG,CAACA,IAAD,IAAS,EAAEA,gBAAgBC,MAAlB,CAAZ,EAAuC;AACnC,cAAM,IAAIC,KAAJ,CAAU,mBAAV,CAAN;AACH;;AAED,WAAO;AACHC,wBAAgB,wBAACC,GAAD,EAAcC,QAAd,EAAqC;AACjD,gBAAIC,SAAS,IAAb;AACA,iBAAI,IAAMC,GAAV,IAAiBP,IAAjB,EAAuB;AACnB,oBAAGA,KAAKQ,cAAL,CAAoBD,GAApB,CAAH,EAA6B;AACzB,wBAAG,EAAEF,YAAYA,SAASI,OAAT,CAAiBF,GAAjB,KAAyB,CAAvC,KAA6CH,IAAIG,GAAJ,MAAaP,KAAKO,GAAL,CAA7D,EAAwE;AACpED,iCAAS,KAAT;AACA;AACH;AACJ;AACJ;AACD,mBAAOA,MAAP;AACH,SAZE;AAaHI,gBAAQ,gBAACC,GAAD,EAAoC;AACxC,gBAAMC,OAAO,EAAb;AACA,iBAAI,IAAMC,IAAV,IAAkBb,IAAlB,EAAwB;AACpB,oBAAGA,KAAKQ,cAAL,CAAoBK,IAApB,KAA6BF,IAAIX,KAAKa,IAAL,CAAJ,CAAhC,EACID,KAAKC,IAAL,IAAab,KAAKa,IAAL,CAAb;AACP;AACD,mBAAOD,IAAP;AACH,SApBE;AAqBHE,aAAK,aAACH,GAAD,EAAkC;AACnC,gBAAMC,OAAO,EAAb;AACA,iBAAI,IAAMC,IAAV,IAAkBb,IAAlB,EAAwB;AACpB,oBAAGA,KAAKQ,cAAL,CAAoBK,IAApB,CAAH,EACID,KAAKC,IAAL,IAAaF,IAAIX,KAAKa,IAAL,CAAJ,CAAb;AACP;AACD,mBAAOD,IAAP;AACH,SA5BE;AA6BHG,iBAAS,iBAACJ,GAAD,EAAsD;AAC3D,gBAAMC,OAAO,EAAb;AACA,iBAAI,IAAMC,IAAV,IAAkBb,IAAlB,EAAwB;AACpB,oBAAGA,KAAKQ,cAAL,CAAoBK,IAApB,CAAH,EAA8B;AAAA,+BACEF,IAAIE,IAAJ,EAAUb,KAAKa,IAAL,CAAV,CADF;AAAA;AAAA,wBAClBG,OADkB;AAAA,wBACTC,MADS;;AAE1BL,yBAAKI,OAAL,IAAgBC,MAAhB;AACH;AACJ;AACD,mBAAOL,IAAP;AACH,SAtCE;AAuCHM,oBAAY,oBAACC,MAAD,EAAmE;AAAA,gBAAlDC,SAAkD,uEAApB;AAAA,uBAAKC,CAAL;AAAA,aAAoB;;AAC3E,gBAAMT,2BAAUO,MAAV,EAAmB,EAAnB,CAAN;AACA,iBAAI,IAAMN,IAAV,IAAkBb,IAAlB,EAAwB;AACpB,oBAAGA,KAAKQ,cAAL,CAAoBK,IAApB,KAA6BA,KAAKS,UAAL,CAAgBH,MAAhB,CAAhC,EAAyD;AACrDP,yBAAKO,MAAL,EAAaC,UAAUP,KAAKU,SAAL,CAAeJ,OAAOK,MAAtB,CAAV,CAAb,IAAyDxB,KAAKa,IAAL,CAAzD;AACH,iBAFD,MAEO;AACHD,yBAAKC,IAAL,IAAab,KAAKa,IAAL,CAAb;AACH;AACJ;AACD,mBAAOD,IAAP;AACH;AAjDE,KAAP;AAmDH,CAxDM","file":"objects.js","sourcesContent":["// @flow\n\nexport const object = (self: Object) => {\n    if(!self || !(self instanceof Object)) {\n        throw new Error(\"Bad object format\")\n    }\n\n    return {\n        shallowCompare: (obj: Object, excludes: string[]) => {\n            let equals = true\n            for(const key in self) {\n                if(self.hasOwnProperty(key)) {\n                    if(!(excludes && excludes.indexOf(key) >= 0) && obj[key] !== self[key]) {\n                        equals = false\n                        return\n                    }\n                }\n            }\n            return equals\n        },\n        filter: (fun: mixed => boolean) : Object => {\n            const copy = {}\n            for(const prop in self) {\n                if(self.hasOwnProperty(prop) && fun(self[prop]))\n                    copy[prop] = self[prop]\n            }\n            return copy\n        },\n        map: (fun: mixed => mixed) : Object => {\n            const copy = {}\n            for(const prop in self) {\n                if(self.hasOwnProperty(prop))\n                    copy[prop] = fun(self[prop])\n            }\n            return copy\n        },\n        fullMap: (fun: (string, mixed) => [string, mixed]) : Object => {\n            const copy = {}\n            for(const prop in self) {\n                if(self.hasOwnProperty(prop)) {\n                    const [ newProp, newVal ] = fun(prop, self[prop])\n                    copy[newProp] = newVal\n                }\n            }\n            return copy\n        },\n        nestPrefix: (prefix: string, transform: string => string = _ => _) : Object => {\n            const copy = { [prefix]: {}}\n            for(const prop in self) {\n                if(self.hasOwnProperty(prop) && prop.startsWith(prefix)) {\n                    copy[prefix][transform(prop.substring(prefix.length))] = self[prop]\n                } else {\n                    copy[prop] = self[prop]\n                }\n            }\n            return copy\n        }\n    }\n}\n"]}